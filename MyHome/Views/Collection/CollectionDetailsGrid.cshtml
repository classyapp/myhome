@model Classy.DotNet.Responses.CollectionView

@section MetaTags {
    <meta property="og:title" content="@Model.Title" />
    <meta property="og:description" content="@(string.IsNullOrEmpty(Model.Content) ? string.Format(Localizer.Get("Collection_Share_Description", false), Model.Profile.GetProfileName()) : Model.Content)" />
    @{

    var cdnurl = System.Configuration.ConfigurationManager.AppSettings["Classy:CloudFrontDistributionUrl"];
    if (Model.CoverPhotos != null && Model.CoverPhotos.Count > 0)
    {
        <meta property="og:image" content="https://@(cdnurl)/thumbnail/@(Model.CoverPhotos[0])?Width=720&Height=0&format=json" />
    }
    else if (Model.Listings != null && Model.Listings.Count > 0 && Model.Listings[0].ExternalMedia != null && Model.Listings[0].ExternalMedia.Count > 0)
    {
        <meta property="og:image" content="https://@(cdnurl)/thumbnail/@(Model.Listings[0].ExternalMedia[0].Key)?Width=720&Height=0&format=json" />
    }

}
}

@{
    ViewBag.Title = string.Concat(Model.Title, " - ", Model.Profile.GetProfileName());
    var meta = Model.Content ?? string.Empty;
    ViewBag.MetaDescription = (!string.IsNullOrEmpty(Model.Content) && Model.Content.Length > 256) ? Model.Content.Substring(0, 256) : Model.Content;
    var photos = Model.Listings != null ? Model.Listings.Where(x => x.ListingType == "Photo") : new List<Classy.DotNet.Responses.ListingView>();
    var proCategories = Localizer.GetList("professional-categories");
}

@if (TempData["PostComment_Success"] != null)
{
    @Html.Bootstrap().Alert(Localizer.Get("PostComment_Success")).Closeable().Style(AlertColor.Success)
}

@section ActionBar {
    @if (User.Identity.IsAuthenticated && Model.Profile.CanEdit())
    {
        if (Model.Type == "Project")
        {
            <a href="@Url.RouteUrl("EditCollection")" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-pencil"></i> @Localizer.Get("Profile_EditProject")</a>
            <a data-href="@Url.RouteUrl("DeleteCollection")" trigger-project-action="delete" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-trash"></i> @Localizer.Get("Profile_DeleteProject")</a>
            <a href="#" data-toggle="modal" data-target="#select-cover-modal" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-picture"></i> @Localizer.Get("Project_SelectCoverPhotos")</a>
        }
        else
        {
            <a href="@Url.RouteUrl("EditCollection")" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-pencil"></i> @Localizer.Get("Profile_EditCollection")</a>
            <a data-href="@Url.RouteUrl("DeleteCollection")" trigger-collection-action="delete" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-trash"></i> @Localizer.Get("Profile_DeleteCollection")</a>
            <a href="#" data-toggle="modal" data-target="#select-cover-modal" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-picture"></i> @Localizer.Get("Collection_SelectCoverPhotos")</a>
        }
    }
}

<div class="collection row" data-id="@Model.Id" data-type="@(Model.Type == "Project" ? "Project" : "Collection")">
    <div class="col-md-12">
        <div class="alert alert-dismissable hide" id="pageAlert">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
            <span></span>
        </div>
    </div>
    <div class="col-md-9">
        <h1>@Model.Title</h1>
        <div class="profile clearfix">
            <img src="@Model.Profile.AvatarUrl(50, true)" width="50" class="pull-left img-circle" />
            <div class="details">
                @Html.ProfileLink(Model.Profile)
                @if (Model.Profile.IsProfessional && !string.IsNullOrEmpty(Model.Profile.ProfessionalInfo.Category))
                {
                    <br />
                    <span>@proCategories.Single(x => x.Value == Model.Profile.ProfessionalInfo.Category).Text</span>
                }
            </div>
        </div>

        @if (Model.IncludedListings != null && Model.IncludedListings.Count() > 0 && Model.IncludedListings.Any(x => !string.IsNullOrEmpty(x.Comments)))
        {
            <div class="view-icons">
                <hr />
                <div class="icons">
                    <a href="@Url.RouteUrlForCurrentLocale("CollectionDetails", new { view = "grid" })"><i class="fa fa-th-large"></i></a>
                    <a href="@Url.RouteUrlForCurrentLocale("CollectionDetails", new { view = "list" })"><i class="fa fa-th-list"></i></a>
                </div>
            </div>
        }

        <p class="article-content">@Model.Content</p>
        <div class="row" id="photos">
            @if (photos != null)
            {
                @Html.Partial("PhotoGrid", new MyHome.Models.PhotoGridViewModel { Results = photos.ToList(), ThumbnailSize = 270, ShowCopyrightMessages = true })
            }
        </div>
        <div>
            <p>
                <h4 class="panel-title">@Localizer.Get("CollectionDetails_Comments")</h4>
            </p>

            @if (Model.Comments.Count == 0)
            {
                <p>@Localizer.Get("CollectionDetails_NoComments")</p>
            }

            @foreach (var c in Model.Comments)
            {
                <p class="comment">
                    <div class="media">
                        <div class="pull-left">
                            <img src="@c.Profile.AvatarUrl(40, true)" width="40" class="img-circle" />
                        </div>
                        <div class="media-body">
                            <strong class="media-heading">@Html.ProfileLink(c.Profile):</strong>
                <p>@c.Content</p>
            </div>
        </div>

                </p>
            }

            @using (var f = Html.Bootstrap().Begin(new Form("PostComment", "Collection").Type(FormType._NotSet)))
            {
                @Html.Hidden("CollectionId", Model.Id);
                @f.FormGroup().TextArea("Content").Value(string.Empty).Rows(3).ShowValidationMessage(false).HelpText(Localizer.Get("CollectionComment_Tip")).Label().LabelText(Localizer.Get("PhotoDetails_Comment_Content"))
                @f.FormGroup().CustomControls(Html.Bootstrap().SubmitButton().Text(Localizer.Get("CollectionDetails_Comment_Submit")).Style(ButtonStyle.Primary).HtmlAttributes(new { authorize = "true" }))
            }
        </div>
    </div>

    <div class="col-md-3">
        <div class="share-actions">
            @{
                var shareUrl = string.Concat(Classy.DotNet.Responses.AppView.Hostname, Url.RouteUrlForCurrentLocale("CollectionDetails", new { CollectionId = Model.Id, view = "list" }));

                if (User.Identity.IsAuthenticated)
                {
                    <a class="btn btn-default action share-email" href="#" onclick="Classy.SendEmail('@Model.Title', '@HttpUtility.HtmlEncode(string.Format(Localizer.Get("Collection_MailLinkBody", false), string.Concat(shareUrl, "?utm_source=share_collection&utm_medium=email"), (User.Identity as Classy.DotNet.Security.ClassyIdentity).Profile.GetProfileName()).Replace("\r\n", "\\r\\n"))', '@Localizer.Get("Collection_ShareViaEmailTitle")', 'email', 'collection-details-grid')"><i class="glyphicon glyphicon-send"></i></a>
                }
                <a class="btn btn-default action share-facebook" href="#" onclick="Classy.ShareUI('https://www.facebook.com/sharer/sharer.php?u=', encodeURIComponent('@(shareUrl)' + '?utm_source=share_collection&utm_medium=facebook'), 520, 350, 'facebook', 'collection-details-grid')"><i class="fa fa-facebook"></i></a>
                <a class="btn btn-default action share-twitter" href="#" onclick="Classy.ShareUI('https://twitter.com/home?status=', encodeURIComponent('@(shareUrl)' + '?utm_source=share_collection&utm_medium=twitter'), 520, 350, 'twitter', 'collection-details-grid')"><i class="fa fa-twitter"></i></a>
                <a class="btn btn-default action share-google-plus" href="#" onclick="Classy.ShareUI('https://plus.google.com/share?url=', encodeURIComponent('@(shareUrl)' + '?utm_source=share_collection&utm_medium=gplus'), 520, 350, 'gplus', 'collection-details-grid')"><i class="fa fa-google-plus"></i></a>
            }
        </div>
        @*<div class="panel panel-default collection-actions">
            <div class="panel-heading">
                <h3 class="panel-title">Create</h3>
            </div>
            <div class="panel-body">
                <a href="#" id="create-poll" class="btn btn-primary btn-block">Create Poll</a>
            </div>
        </div>*@
    </div>
</div>

<div class="modal fade" id="select-cover-modal" data-backdrop="static" data-remote="@Url.RouteUrl("SelectCollectionCoverPhotos", new { collectionId = Model.Id })">
    <div class="modal-dialog">
        <div class="modal-content" id="select-cover-replace">
        </div>
    </div>
</div>
