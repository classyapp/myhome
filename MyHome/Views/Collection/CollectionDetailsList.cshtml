@model Classy.DotNet.Responses.CollectionView

@section MetaTags {
    <meta name="og:title" content="@Model.Title" />
    <meta name="og:description" content="@(string.IsNullOrEmpty(Model.Content) ? string.Format(Localizer.Get("Collection_Share_Description", false), Model.Profile.GetProfileName()) : Model.Content)" />
    @{

        var cdnurl = System.Configuration.ConfigurationManager.AppSettings["Classy:CloudFrontDistributionUrl"];
        if (Model.CoverPhotos != null && Model.CoverPhotos.Count > 0)
        {
            <meta name="og:image" content="https://@(cdnurl)/thumbnail/@(Model.CoverPhotos[0])?Width=270&Height=270&format=json" />
        }
        else if (Model.Listings !=null && Model.Listings.Count> 0 && Model.Listings[0].ExternalMedia != null && Model.Listings[0].ExternalMedia.Count > 0)
        {
            <meta name="og:image" content="https://@(cdnurl)/thumbnail/@(Model.Listings[0].ExternalMedia[0].Key)?Width=270&Height=270&format=json" />
        }
    }
}

@{
    ViewBag.Title = string.Concat(Model.Title, " - ", Model.Profile.GetProfileName());
    var meta = Model.Content ?? string.Empty;
    ViewBag.MetaDescription = (!string.IsNullOrEmpty(Model.Content) && Model.Content.Length > 256) ? Model.Content.Substring(0, 256) : Model.Content;
    var photos = Model.Listings != null ? Model.Listings.Where(x => x.ListingType == "Photo").ToDictionary(x => x.Id, x => x) : new Dictionary<string, Classy.DotNet.Responses.ListingView>();
    var comments = Model.IncludedListings != null ? Model.IncludedListings.ToDictionary(l => l.Id, l => l.Comments) : new Dictionary<string, string>();
    var proCategories = Localizer.GetList("professional-categories");
}

@if (TempData["PostComment_Success"] != null)
{
    @Html.Bootstrap().Alert(Localizer.Get("PostComment_Success")).Closeable().Style(AlertColor.Success)
}



@section ActionBar {
    @if (User.Identity.IsAuthenticated && Model.Profile.CanEdit())
    {
        <a href="@Url.RouteUrl("EditCollection")" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-pencil"></i> @Localizer.Get("Profile_EditCollection")</a>
        if (Model.Type == "Project")
        {
            <a data-href="@Url.RouteUrl("DeleteCollection")" trigger-project-action="delete" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-trash"></i> @Localizer.Get("Profile_DeleteProject")</a>
        }
        else
        {
            <a data-href="@Url.RouteUrl("DeleteCollection")" trigger-collection-action="delete" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-trash"></i> @Localizer.Get("Profile_DeleteCollection")</a>
        }
        if (Model.Type == "Project")
        {
            <a href="#" data-toggle="modal" data-target="#select-cover-modal" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-picture"></i> @Localizer.Get("Project_SelectCoverPhotos")</a>
        }
        else
        {
            <a href="#" data-toggle="modal" data-target="#select-cover-modal" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-picture"></i> @Localizer.Get("Collection_SelectCoverPhotos")</a>
        }
    }
}

<div class="collection row">
    <div class="col-md-9">
        <h1>@Model.Title</h1>
        <div class="profile clearfix">
            <img src="@Model.Profile.AvatarUrl(50, true)" width="50" class="pull-left img-circle" />
            <div class="details">
                @Html.ProfileLink(Model.Profile)
                @if (Model.Profile.IsProfessional && !string.IsNullOrEmpty(Model.Profile.ProfessionalInfo.Category))
                {
                    <br />
                    <span>@proCategories.Single(x => x.Value == Model.Profile.ProfessionalInfo.Category).Text</span>
                }
            </div>
        </div>

        <div class="view-icons">
            <hr />
            <div class="icons">
                <a href="@Url.RouteUrlForCurrentLocale("CollectionDetails", new { view = "grid" })"><i class="fa fa-th-large"></i></a>
                <a href="@Url.RouteUrlForCurrentLocale("CollectionDetails", new { view = "list" })"><i class="fa fa-th-list"></i></a>
            </div>
        </div>

        <p class="article-content">@Model.Content</p>

        <div class="row" id="photos">
            @if (photos != null)
            {
                foreach (var id in comments.Keys)
                {
                    var p = photos[id];
                    <div class="article-paragraph">
                        <div class="article-image">
                            <a href="@Url.RouteUrlForCurrentLocale("PhotoDetails", new { ListingId = p.Id })">
                                @Html.Thumbnail(p, 720, false, false)
                            </a>
                        </div>
                        @Html.Partial("PhotoCopyrightMessage", p)
                        <div class="article-comments">
                            @(comments.ContainsKey(p.Id) ? comments[p.Id] : string.Empty)
                        </div>
                        <div class="clearfix"></div>
                    </div>
                }
            }
        </div>
    </div>
    <div class="col-md-3">
        <div class="share-actions">
            @{
                var shareUrl = string.Concat(Classy.DotNet.Responses.AppView.Hostname, Url.RouteUrlForCurrentLocale("CollectionDetails", new { CollectionId = Model.Id, view = "list" }));

                if (User.Identity.IsAuthenticated)
                {
                    <a class="btn btn-default action share-email" href="#" onclick="Classy.SendEmail('@HttpUtility.HtmlEncode(Localizer.Get("Collection_MailLinkSubject"))', '@HttpUtility.HtmlEncode(string.Format(Localizer.Get("Collection_MailLinkBody", false), string.Concat(shareUrl, "?utm_source=share_collection&utm_medium=email"), (User.Identity as Classy.DotNet.Security.ClassyIdentity).Profile.GetProfileName()).Replace("\r\n", "\\r\\n"))', '@Localizer.Get("Collection_ShareViaEmailTitle")')"><i class="glyphicon glyphicon-send"></i></a>
                }
                <a class="btn btn-default action share-facebook" href="#" onclick="Classy.ShareUI('https://www.facebook.com/sharer/sharer.php?u=', encodeURIComponent('@(shareUrl)' + '?utm_source=share_collection&utm_medium=facebook'), 520, 350)"><i class="fa fa-facebook"></i></a>
                <a class="btn btn-default action share-twitter" href="#" onclick="Classy.ShareUI('https://twitter.com/home?status=', encodeURIComponent('@(shareUrl)' + '?utm_source=share_collection&utm_medium=twitter'), 520, 350)"><i class="fa fa-twitter"></i></a>
                <a class="btn btn-default action share-google-plus" href="#" onclick="Classy.ShareUI('https://plus.google.com/share?url=', encodeURIComponent('@(shareUrl)' + '?utm_source=share_collection&utm_medium=gplus'), 520, 350)"><i class="fa fa-google-plus"></i></a>
            }
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-9">
        <p>
            <h4 class="panel-title">@Localizer.Get("CollectionDetails_Comments")</h4>
        </p>

        @if (Model.Comments.Count == 0)
        {
            <p>@Localizer.Get("CollectionDetails_NoComments")</p>
        }

        @foreach (var c in Model.Comments)
        {
            <p class="comment">
                <div class="media">
                    <div class="pull-left">
                        <img src="@c.Profile.AvatarUrl(40, true)" width="40" class="img-circle" />
                    </div>
                    <div class="media-body">
                        <strong class="media-heading">@Html.ProfileLink(c.Profile):</strong>
                        <p>@c.Content</p>
                    </div>
                </div>
            </p>
        }

        @using (var f = Html.Bootstrap().Begin(new Form("PostComment", "Collection").Type(FormType._NotSet)))
        {
            @Html.Hidden("CollectionId", Model.Id);
            @f.FormGroup().TextArea("Content").Value(string.Empty).Rows(3).ShowValidationMessage(false).HelpText(Localizer.Get("CollectionComment_Tip")).Label().LabelText(Localizer.Get("PhotoDetails_Comment_Content"))
            @f.FormGroup().CustomControls(Html.Bootstrap().SubmitButton().Text(Localizer.Get("CollectionDetails_Comment_Submit")).Style(ButtonStyle.Primary).HtmlAttributes(new { authorize = "true" }))
        }
    </div>
</div>

@section scripts {
    <script>
        $(function () {
            $(".article-image img").each(function (idx, item) {
                var img = new Image();
                img.src = item.src;
                img.alt = $(item).data("id");
                img.onload = function (e) {
                    if (this.width > 800 && this.width > this.height) { // lanscape
                        $("img[data-id=" + this.alt + "]").parent().removeClass("hide").addClass("image-block");
                    } else {
                        var articleImage = $("img[data-id=" + this.alt + "]").parent();
                        var articleComments = articleImage.closest(".article-paragraph").find(".article-comments");
                        articleImage.removeClass("hide").addClass("image-side").prependTo(articleComments);
                    }
                }
            });
        });
    </script>
}

