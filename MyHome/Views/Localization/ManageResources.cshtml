@model Classy.DotNet.Mvc.ViewModels.Localization.ManageResourcesViewModel
@{
    ViewBag.Title = "ManageResources";
    ViewBag.DisableSignupBanner = true;
    var isInvalidKey = TempData["InvalidKey"] != null;
    var supportedCultures = Classy.DotNet.Responses.AppView.SupportedCultures;
}

<h2>@Localizer.Get("ManageResources_Title")</h2>

<div class="row">
    <div class="col-md-4 resourceListContainer">
        <h4>@Localizer.Get("ManageResources_LoadTitle")</h4>
        @using (var f = Html.Bootstrap().Begin(new Form("ManageResources").FormMethod(FormMethod.Get).Type(FormType.Inline)))
        {
            @f.FormGroup().TextBoxFor(x => x.ResourceKey).Placeholder(Localizer.Get("ManageResources_KeyPlaceholder")).ShowValidationMessage(false).Label().Class("sr-only")
            @Html.Bootstrap().SubmitButton().Style(ButtonStyle.Primary).Text(Localizer.Get("ManageResources_Get"))
        }
        <hr />
        <h4>@string.Format(Localizer.Get("ManageResources_MissingTitle"), supportedCultures.GetText(Model.SelectedCulture))</h4>
        <ul class="resourceList list-unstyled">
            @foreach (var key in Model.MissingResourceKeys)
            {
                <li>@Html.RouteLink(key, "ManageResources", new { resourceKey = key, selectedCulture = Model.SelectedCulture }, new { @class = "btn btn-block btn-default" })</li>
            }
        </ul>
    </div>

    <div class="col-md-8">
        @if (isInvalidKey)
        {
            @Html.Bootstrap().Alert(string.Format(Localizer.Get("ManageResources_InvalidKey"), Model.ResourceKey)).Closeable().Style(AlertColor.Danger)
        }
        else if (!string.IsNullOrEmpty(Model.ResourceKey))
        {
            if (TempData["Success"] != null)
            {
                @Html.Bootstrap().Alert(Localizer.Get("ManageResources_Success")).Closeable().Style(AlertColor.Success)
            }
            <h1>@Model.ResourceKey</h1>
            <div style="direction: ltr">
                <h4>@Model.ResourceDescription</h4>
                <p><small>EN: @Localizer.Get(Model.ResourceKey, "en")</small></p>
            </div>
            using (var f = Html.Bootstrap().Begin(new Form("ManageResources", "Localization").FormMethod(FormMethod.Post)))
            {
                @Html.HiddenFor(x => x.ResourceKey)
                @f.FormGroup().TextAreaFor(x => x.ResourceValue).Rows(20).ShowValidationMessage(false).Label().Class("sr-only")
                @f.FormGroup().CustomControls(Html.Bootstrap().SubmitButton().Style(ButtonStyle.Primary).Text(Localizer.Get("ManageResources_Submit")))
            }
        }
    </div>
</div>

<div class="modal fade" id="newResourceModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">@Localizer.Get("ManageResources_Modal_Title")</h4>
            </div>
            <div class="modal-body">
                @using (var f = Html.Bootstrap().Begin(new Form("ManageResources", "Localization").FormMethod(FormMethod.Post)))
                {
                    @f.FormGroup().TextBoxFor(x => x.ResourceKey).ShowValidationMessage(false).Label()
                    @f.FormGroup().TextAreaFor(x => x.ResourceValue).Rows(10).ShowValidationMessage(false)
                    @f.FormGroup().CustomControls(Html.Bootstrap().SubmitButton().Style(ButtonStyle.Primary).Text(Localizer.Get("ManageResources_Submit")))
                }
            </div>
        </div>
    </div>
</div>



