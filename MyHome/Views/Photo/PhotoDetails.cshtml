@model Classy.DotNet.Mvc.ViewModels.Listing.ListingDetailsViewModel<MyHome.Models.PhotoMetadata>

@{
    var rooms = Localizer.GetList("rooms");
    var styles = Localizer.GetList("room-styles");
    var proCategories = Localizer.GetList("professional-categories");
    
    ViewBag.Title = string.Concat(Model.Listing.Title, " - ", styles.GetText(Model.Metadata.Style), " - ", rooms.GetText(Model.Metadata.Room), " - ", Model.Listing.Profile.GetProfileName());
    ViewBag.MetaDescription = Model.Listing.Content;
}

@section MetaTags {
    <meta name="og:title" content="@Model.Listing.Title" />
    <meta name="og:description" content="@(string.IsNullOrEmpty(Model.Listing.Content) ? string.Format(Localizer.Get("PhotoDetails_Description", false), rooms.GetText(Model.Metadata.Room), styles.GetText(Model.Metadata.Style), Model.Listing.Profile.GetProfileName()) : Model.Listing.Content)" />
    <meta name="og:image" content="@Model.Listing.ExternalMedia[0].Url" />
}

@section ActionBar {
    @if (Model.Listing.CanEdit()) {
        <a class="btn btn-sm btn-primary" href="@Url.RouteUrl("EditPhoto")"><i class="glyphicon glyphicon-pencil"></i>&nbsp;@Localizer.Get("PhotoDetails_Edit")</a>
    }
}

<div class="row photo-details">    
    <div class="col-md-12">
        @if (TempData["PostComment_Success"] != null)
        {
            @Html.Bootstrap().Alert(Localizer.Get("PostComment_Success")).Closeable().Style(AlertColor.Success)
        }

        <div class="ajax-alert">
            @if (Request.QueryString["msg"] != null)
            {
                <div class="alert alert-success alert-dismissable"><button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button><p>@Localizer.Get(Request.QueryString["msg"])</p></div> 
            }
        </div>
    </div>

    <div class="col-md-7">
        <div class="photo clearfix">
            <img src="@Model.Listing.ExternalMedia[0].Url" class="img-responsive" />
            @if (Model.Metadata.CopyrightMessage != null && !Model.Metadata.IsWebPhoto) {
                <span>@Model.Metadata.CopyrightMessage</span>
            }
            <div class="stats">
                <span><i class="glyphicon glyphicon-eye-open"></i> @string.Format(Localizer.Get("PhotoDetails_ViewCount"), Model.Listing.ViewCount)</span>
                <span><i class="glyphicon glyphicon-th-large"></i> @string.Format(Localizer.Get("PhotoDetails_CollectionCount"), Model.Listing.AddToCollectionCount)</span>
                <span><i class="glyphicon glyphicon-heart-empty"></i> @string.Format(Localizer.Get("PhotoDetails_FavoriteCount"), Model.Listing.FavoriteCount)</span>
                <span><i class="glyphicon glyphicon-comment"></i> @string.Format(Localizer.Get("PhotoDetails_CommentCount"), Model.Listing.CommentCount)</span>
            </div>
        </div>
        
        <h2>@Model.Listing.Title</h2>
        <p>@Model.Listing.Content</p>

        <hr/>
        <h4>@Localizer.Get("PhotoDetails_InThisPhoto")</h4>
        <div>
            <dl class="dl-horizontal">
                @if (Model.Metadata.CopyrightMessage != null &&
                    (Model.Metadata.CopyrightMessage.StartsWith("http") || Model.Metadata.CopyrightMessage.StartsWith("//")))
                {
                    <dt>@Localizer.Get("PhotoDetails_FoundOn")</dt>
                    <dd><a href="@Model.Metadata.CopyrightMessage" rel="nofollow">@(new Uri(Model.Metadata.CopyrightMessage).Host)</a></dd>
                }
                <dt>@Localizer.Get("PhotoDetails_Room")</dt>
                <dd><a href="@Url.RouteUrlForCurrentLocale("SearchPhoto", new { filters = new MyHome.Models.PhotoMetadata { Room = Model.Metadata.Room }.GetSearchFilterSlug(null, null) })">@rooms.Single(x => x.Value == Model.Metadata.Room).Text</a></dd>
                <dt>@Localizer.Get("PhotoDetails_Style")</dt>
                <dd>@Html.RouteLinkForCurrentLocale(styles.Single(x => x.Value == Model.Metadata.Style).Text, "SearchPhoto", new { filters = new MyHome.Models.PhotoMetadata { Style = Model.Metadata.Style }.GetSearchFilterSlug(null, null) })</dd>
                <dt>@Localizer.Get("PhotoDetails_Keywords")</dt>
                <dd>
                    @foreach (var t in Model.Listing.Hashtags)
                    {
                        @Html.RouteLinkForCurrentLocale(t.TrimStart('#'), "SearchPhoto", new { filters = t.TrimStart('#').ToLower().Replace("  "," ").Replace(" ","-") })<span>&nbsp;</span>
                    }
                </dd>
            </dl>
        </div>
    </div>
    <div class="col-md-5">
        <div class="profile clearfix">
            <img src="@Model.Listing.Profile.AvatarUrl(50, true)" width="50" class="pull-left img-circle" />
            <div class="details">
                @Html.ProfileLink(Model.Listing.Profile)
                @if (Model.Listing.Profile.IsProfessional && !string.IsNullOrEmpty(Model.Listing.Profile.ProfessionalInfo.Category))
                {
                    <br />
                    <span>@proCategories.Single(x => x.Value == Model.Listing.Profile.ProfessionalInfo.Category).Text</span>
                }
            </div>
        </div>
        
        <hr />

        @Html.Partial("PhotoActions", new MyHome.Models.PhotoActionsViewModel { Listing = Model.Listing, ShowCollect = true, ShowFavorite = true, ShowShare = true, IsStatic = true })

        <hr />
        <div>
            <p>
                <h4 class="panel-title">@Localizer.Get("PhotoDetails_Comments")</h4>
            </p>
        
            @if (Model.Listing.CommentCount == 0)
            {
                <p>@Localizer.Get("PhotoDetails_NoComments")</p>
            }
            
            @foreach (var c in Model.Listing.Comments)
            {
                <p class="comment">
                    <div class="media">
                        <div class="pull-left">
                            <img src="@c.Profile.AvatarUrl(40, true)" width="40" class="img-circle" />
                        </div>
                        <div class="media-body">
                            <strong class="media-heading">@Html.ProfileLink(c.Profile):</strong>
                            <p>@c.Content</p>
                        </div>
                    </div>
                </p>
            }

            @using (var f = Html.Bootstrap().Begin(new Form("PostComment", "Photo")))
            {
                @Html.Hidden("ListingId", Model.Listing.Id);
                @f.FormGroup().TextArea("Content").Rows(3).ShowValidationMessage(false).HelpText(Localizer.Get("PhotoComment_Tip")).Label().WidthLg(12).LabelText(Localizer.Get("PhotoDetails_Comment_Content"))
                @f.FormGroup().CustomControls(Html.Bootstrap().SubmitButton().Text(Localizer.Get("PhotoDetails_Comment_Submit")).Style(ButtonStyle.Primary).HtmlAttributes(new { authorize = "true" }))
            }
        </div>
    </div>
</div>

<div class="modal fade" id="translate-modal" data-remote="" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" id="translate-modal-replace">
            <!-- will be replaced -->
        </div>
    </div>
</div>