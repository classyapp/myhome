@model Classy.DotNet.Mvc.ViewModels.Listing.CreateListingViewModel<MyHome.Models.Polls.PollMetadata>

@{
    ViewBag.Title = Localizer.Get("CreatePoll_PageTitle");
    ViewBag.NoIndex = true;
    Html.Bootstrap().Globals().ShowRequiredStar(false);

    var rooms = Localizer.GetList("rooms");
    var styles = Localizer.GetList("room-styles");
}

<div class="row">
    <div class="col-md-7 main">
        <h1>@Localizer.Get("CreatePoll_PageTitle")</h1>
        <hr />

        @Html.Bootstrap().ValidationSummary()

        @using (var f = Html.Bootstrap().Begin(new Form("CreatePoll", "Poll").Type(FormType._NotSet).HtmlAttributes(new { enctype = "multipart/form-data" })))
        {
            @f.FormGroup().Id("title").TextBoxFor(x => x.Title).Placeholder(Localizer.Get("CreatePoll_FormTitleLabel")).ShowValidationMessage(false).Label()
            @f.FormGroup().Id("content").TextAreaFor(x => x.Content).ShowValidationMessage(false).Label()
            
            <div class="alert alert-warning">
                <div class="form-group">
                    <div class="select-listings clearfix">
                        <span class="btn btn-warning btn-select-listings" type="button">@Localizer.Get("CreatePoll_SelectListings")</span>
                    </div>

                    <div id="listings-preview" class="row"></div>
                </div>
            </div>
            
            @f.FormGroup().CustomControls(Html.Bootstrap().Button().HtmlAttributes(new { id = "create-poll", onclick = "createPoll()" }).Text(Localizer.Get("CreatePoll_Submit")).Style(ButtonStyle.Primary))
        }
    </div>

    <div class="col-md-4 col-md-offset-1 helpbar">
        @if (Model.CollectionType == Classy.DotNet.Responses.CollectionType.PhotoBook)
        {
            <h1>@Localizer.Get("CreatePhoto_PhotoBook_Title_DoDont")</h1>
            <div class="content">
                @Html.Raw(Localizer.Get("CreatePhoto_PhotoBook_Content_DoDont"))
            </div>
        }
        else
        {
            <h1>@Localizer.Get("CreatePhoto_Project_Title_DoDont")</h1>
            <div class="content">
                @Html.Raw(Localizer.Get("CreatePhoto_Project_Content_DoDont"))
            </div> 
        }
        <div>
            @if (!Model.IsFacebookConnected)
            {
                <hr />
                <p><strong>@Localizer.Get("CreatePhoto_Help_ImportTitle")</strong></p>
                <a href="#" class="btn btn-block btn-fb-login">@Localizer.Get("CreatePhoto_Import_Facebook")</a>
            }
        </div>
    </div>
</div>




<!-- Select Listings Modal -->
<div class="modal fade" id="select-listings-modal" data-remote="@Url.RouteUrl("SelectListingsModal")" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content" id="select-listings-modal-replace">
            <!-- will be replaced -->
        </div>
    </div>
</div>



@section scripts
{
    @*<script type="text/javascript" src="~/Scripts/xhr-upload.js"></script>
    <script type="text/javascript" src="~/Scripts/new_photo.js"></script>*@
    <script type="text/javascript">
        $('.btn-select-listings').click(function() {
            $('#select-listings-modal').modal('show');
        });
    </script>
}