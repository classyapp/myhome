@using System.Configuration
@using Classy.DotNet.Mvc.Extensions
@using MyHome.Models.Polls
@model Classy.DotNet.Mvc.ViewModels.Listing.ListingDetailsViewModel<MyHome.Models.Polls.PollMetadata>

@{
    var proCategories = Localizer.GetList("professional-categories");
    var pollExtraData = Model.ExtraData as PollViewExtraData;
    var pollEnded = pollExtraData.EndDate.HasValue ? pollExtraData.EndDate < DateTime.Now : false;

    ViewBag.Title = string.Concat("HomeLab.com :: ", Model.Listing.Title);
    ViewBag.MetaDescription = Model.Listing.Content;

    var pollCollageUrl = string.Empty;
    if (pollExtraData.Listings.Any() && pollExtraData.Listings.First().ExternalMedia.Count > 0)
    {
        var imageKeys = pollExtraData.Listings.Select(x => x.ExternalMedia[0].Key).ToArray();
        pollCollageUrl = "http://" + ConfigurationManager.AppSettings["Classy:CloudFrontDistributionUrl"] + "/collage?ImageKeys=" + string.Join(",", imageKeys) + "&format=json";
    }
}

@section MetaTags {
    <meta property="og:title" content="@Model.Listing.Title" />
    <meta property="og:description" content="@Model.Listing.Content" />
    @if (Model.Listing.ExternalMedia.Count > 0)
    {
        <meta property="og:image" content="@Model.Listing.ExternalMedia[0].Url" />
    }
    else if (pollExtraData.Listings.Any() && pollExtraData.Listings.First().ExternalMedia.Count > 0)
    {
        @Html.Raw("<meta property=\"og:image\" content=\"" + pollCollageUrl + "\" />")
    }
}

@if (!string.IsNullOrEmpty(pollCollageUrl))
{
    <img src="@pollCollageUrl" class="hidden"/>
}
<div class="row photo-details poll-details" data-poll-id="@Model.Listing.Id" data-poll-ended="@pollEnded.ToString().ToLower()">
    <div class="col-md-12">
        @if (TempData["PostComment_Success"] != null)
        {
            @Html.Bootstrap().Alert(Localizer.Get("PostComment_Success")).Closeable().Style(AlertColor.Success)
        }

        <div class="ajax-alert">
            @if (Request.QueryString["msg"] != null)
            {
                <div class="alert alert-success alert-dismissable"><button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button><p>@Localizer.Get(Request.QueryString["msg"])</p></div>
            }
        </div>
    </div>

    <div class="col-md-12">
        <div class="profile clearfix">
            <img src="@Model.Listing.Profile.AvatarUrl(50, true)" width="50" class="pull-left img-circle" />
            <div class="details">
                @Html.ProfileLink(Model.Listing.Profile)
                @if (Model.Listing.Profile.IsProfessional && !string.IsNullOrEmpty(Model.Listing.Profile.ProfessionalInfo.Category))
                {
                    <br />
                    <span>@proCategories.Single(x => x.Value == Model.Listing.Profile.ProfessionalInfo.Category).Text</span>
                }
            </div>
        </div>
    </div>

    <div class="clearfix">
        <div class="col-md-7">
            <h1>
                @Model.Listing.Title
                <span class="label label-info pull-right">
                    @if (pollExtraData.EndDate.HasValue && !pollEnded)
                    {
                        @Localizer.Get("PollDetails_VotingEndsLabel")
                        @pollExtraData.EndDate.Value.ToShortDateString()
                    }
                    else if (pollExtraData.EndDate.HasValue)
                    {
                        @Localizer.Get("PollDetails_PollEnded")
                    }
                </span>
            </h1>
            <p>@Model.Listing.Content</p>
        </div>
        <div class="col-md-5">
            @Html.Partial("PollActions", new PollActionsViewModel { PollId = Model.Listing.Id })
        </div>
    </div>
</div>

<div class="col-md-12 poll clearfix" data-poll-id="@Model.Listing.Id">
    <div class="poll-results clearfix">
        @{
            var i = 0;
            var totalVotes = Model.Metadata.Votes.Sum(x => Convert.ToInt32(x));

            var maxVotes = Model.Metadata.Votes.Select(x => Convert.ToInt32(x)).Max();
            var winner = Model.Metadata.Votes.Select(x => Convert.ToInt32(x)).Count(x => x == maxVotes) == 1 ? Model.Metadata.Votes.IndexOf(maxVotes.ToString()) : -1;
            //var classSize = pollExtraData.Listings.Count == 2 ? "col-md-6" : pollExtraData.Listings.Count == 3 ? "col-md-4" : "col-md-3";
            var styleWidth = pollExtraData.Listings.Count == 2 ? "45%" : pollExtraData.Listings.Count == 3 ? "33%" : "23%";
            //var thumbnailSize = pollExtraData.Listings.Count == 2 ? 500 : pollExtraData.Listings.Count == 3 ? 300 : 230;
            var thumbnailSize = 230;
        }
        @foreach (var pollOption in pollExtraData.Listings)
        {
            var usersChoice = !pollExtraData.UserVote.IsNullOrEmpty() && pollExtraData.UserVote == pollOption.Id;
            var votes = Convert.ToInt32(Model.Metadata.Votes.ElementAt(i));
            var votesPercent = totalVotes == 0 ? 0 : Math.Round(((decimal)votes / (decimal)totalVotes) * 100);

            <div class="poll-option-wrapper clearfix" style="width:@styleWidth%">
                <div class="photo thumbnail vote @(usersChoice ? "voted" : "")" @((User.Identity.IsAuthenticated ? "" : "authorize")) data-listing-id="@pollOption.Id">
                    @if (i == winner)
                    {
                        var winnerText = pollEnded ? Localizer.Get("PollDetails_EndedWinner") : Localizer.Get("PollDetails_Winner");
                        <h4><div class="label label-success">@winnerText</div></h4>
                    }
                    <div class="vote-button">
                        <i class="glyphicon glyphicon-ok @(!usersChoice ? "hidden" : "")"></i>
                        <span>@(usersChoice ? Localizer.Get("PollDetails_MyVote") : Localizer.Get("PollDetails_VoteButton"))</span>
                    </div>
                    @Html.Thumbnail(pollOption, thumbnailSize)
                    @Html.Partial("PhotoCopyrightMessage", pollOption)
                </div>
                <div class="vote-percent">
                    <div class="progress">
                        <div class="progress-bar progress-bar-success" data-votes-percent="@votesPercent">@votesPercent%</div>
                    </div>
                </div>
            </div>
                    i++;
        }
    </div>
</div>

<div class="col-md-12">

    <div class="col-md-8">
        <div class="panel panel-default" id="commentsArea">
            <div class="panel-heading">
                <h4 class="panel-title">@Localizer.Get("PhotoDetails_Comments")</h4>
            </div>
            <div class="panel-body">

                @if (Model.Listing.CommentCount == 0)
                {
                    <p>@Localizer.Get("PollDetails_NoComments")</p>
                }

                @foreach (var c in Model.Listing.Comments)
                {
                    <p class="comment">
                        <div class="media">
                            <div class="pull-left">
                                <img src="@c.Profile.AvatarUrl(40, true)" width="40" class="img-circle" />
                            </div>
                            <div class="media-body">
                                <strong class="media-heading">@Html.ProfileLink(c.Profile):</strong>
                    <p>@c.Content</p>
                </div>
            </div>
            </p>
                }

                @using (var f = Html.Bootstrap().Begin(new Form("PostComment", "Poll")))
                {
                    @Html.Hidden("ListingId", Model.Listing.Id);
                    @f.FormGroup().TextArea("Content").Rows(3).ShowValidationMessage(false).Label().LabelText(Localizer.Get("PhotoDetails_Comment_Content"))
                    @f.FormGroup().CustomControls(Html.Bootstrap().SubmitButton().Text(Localizer.Get("PhotoDetails_Comment_Submit")).Style(ButtonStyle.Primary).HtmlAttributes(new { authorize = "true" }))
                }
            </div>
        </div>
    </div>
    
    <div class="col-md-4">

        <div id="more-polls-placeholder"></div>

        <div id="more-photos-placeholder"></div>

    </div>

</div>




@section scripts
{
    @Scripts.Render("~/bundles/polls")
    <script type="text/javascript" language="javascript">
        $(window).load(function() {
            $('.vote-percent .progress-bar').each(function() {
                $(this).css('width', $(this).data('votes-percent') + '%');
            });
        });

        $.ajax({
            url: '/polls/more-polls',
            type: 'POST'
        }).success(function(response) {
            $('#more-polls-placeholder').html(response);
            Classy.UnveilImages();
        });

        $.ajax({
            url: '/polls/related-photos',
            type: 'POST',
            data: { pollId: '@Model.Listing.Id' }
        }).success(function(response) {
            $('#more-photos-placeholder').html(response);
            Classy.UnveilImages();
        });

    </script>
}