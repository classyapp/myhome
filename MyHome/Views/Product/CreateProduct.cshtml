@model Classy.DotNet.Mvc.ViewModels.Listing.CreateListingNoCollectionViewModel<MyHome.Models.ProductMetadata>
@{
    ViewBag.Title = Localizer.Get("CreateProduct_PageTitle");
    Html.Bootstrap().Globals().ShowRequiredStar(false);
    var categories = Classy.DotNet.Responses.AppView.ProductCategories.AsSelectList();

    var styles = Localizer.GetList("room-styles");
    var currencySign = Classy.DotNet.Responses.AppView.SupportedCurrencies.First(c => c.Value == Model.PricingInfo.CurrencyCode).Sign;
}

@section AdditionalStyles {
    <link rel="stylesheet" href="~/Content/ltr/magicsuggest.css" />
    <link rel="stylesheet" href="~/Content/ltr/dropzone.css" />
    <link href="~/Content/ltr/bootstrap-tagsinput.css" rel="stylesheet" />
}

<h2>@Localizer.Get("CreateProduct_PageTitle")</h2>


<div class="row">
    <div class="col-md-7">
        <div class="overlay"></div>
        @Html.Bootstrap().ValidationSummary()

        @using (var f = Html.Bootstrap().Begin(new Form("CreateListingNoCollection", "Product").Type(FormType._NotSet).HtmlAttributes(new { enctype = "multipart/form-data" })))
        {
            @f.FormGroup().TextBoxFor(x => x.Title).ShowValidationMessage(false)
            @f.FormGroup().TextAreaFor(x => x.Content).ShowValidationMessage(false)
            @f.FormGroup().TextBoxFor(x => x.Categories).ShowValidationMessage(false)
            <div class="row">
                @f.FormGroup().DropDownListFor(x => x.Metadata.Style, styles.AsSelectList()).WidthMd(6).ShowValidationMessage(false)
                @f.FormGroup().TextBoxFor(x => x.Metadata.Manufacturer).WidthMd(6).ShowValidationMessage(false)
            </div>
            @Html.HiddenFor(x => x.PricingInfo.CurrencyCode)
            @f.FormGroup().TextBoxFor(x => x.PricingInfo.BaseOption.ProductUrl).ShowValidationMessage(false)
            <hr />
            <div id="externalMedia" class="dropzone">
                <div class="dz-default dz-message">
                    <span>@Localizer.Get("CreateListing_DropFiles")</span>
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-md-3">
                    @f.FormGroup().TextBoxFor(x => x.PricingInfo.BaseOption.SKU).ShowValidationMessage(false)
                </div>
                <div class="col-md-3">
                    @f.FormGroup().TextBoxFor(x => x.PricingInfo.BaseOption.CompareAtPrice).Prepend(currencySign).ShowValidationMessage(false)
                </div>
                <div class="col-md-3">
                    @f.FormGroup().TextBoxFor(x => x.PricingInfo.BaseOption.Price).Prepend(currencySign).ShowValidationMessage(false)
                </div>
                <div class="col-md-3">
                    @f.FormGroup().TextBoxFor(x => x.PricingInfo.BaseOption.Quantity).ShowValidationMessage(false)
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-md-4">
                    @f.FormGroup().TextBoxFor(x => x.PricingInfo.BaseOption.Width).Append("cm").ShowValidationMessage(false)
                </div>
                <div class="col-md-4">
                    @f.FormGroup().TextBoxFor(x => x.PricingInfo.BaseOption.Depth).Append("cm").ShowValidationMessage(false)
                </div>
                <div class="col-md-4">
                    @f.FormGroup().TextBoxFor(x => x.PricingInfo.BaseOption.Height).Append("cm").ShowValidationMessage(false)
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    @f.FormGroup().TextBoxFor(x => x.Metadata.Materials).ShowValidationMessage(false)
                </div>
                <div class="col-md-6">
                    @f.FormGroup().TextBoxFor(x => x.Metadata.Designer).ShowValidationMessage(false)
                </div>
            </div>
            <hr />
            @f.FormGroup().TextBox("Color").Class("tags").HtmlAttributes(new { data_idx = "0" }).ShowValidationMessage(false)
            @f.FormGroup().TextBox("Design").Class("tags").HtmlAttributes(new { data_idx = "1" }).ShowValidationMessage(false)
            @f.FormGroup().TextBox("Size").Class("tags").HtmlAttributes(new { data_idx = "2" }).ShowValidationMessage(false)
            <hr />
            <div id="variations">
                @for (int i = 0; i < Model.PricingInfo.PurchaseOptions.Count; i++)
	            {
		            <div class="variation panel panel-default" data-variation="@string.Join(",", Model.PricingInfo.PurchaseOptions[i].VariantProperties.Values)">
                        <div class="panel-heading">@string.Join(",", Model.PricingInfo.PurchaseOptions[i].VariantProperties.Values)</div>
                        <div class="panel-body">
                            <div class="row">
                                @Html.HiddenFor(x => x.PricingInfo.PurchaseOptions[i].Color)
                                @Html.HiddenFor(x => x.PricingInfo.PurchaseOptions[i].Design)
                                @Html.HiddenFor(x => x.PricingInfo.PurchaseOptions[i].Size)
                                @f.FormGroup().TextBoxFor(x => x.PricingInfo.PurchaseOptions[i].SKU).WidthMd(3).ShowValidationMessage(false)
                                @f.FormGroup().TextBoxFor(x => x.PricingInfo.PurchaseOptions[i].CompareAtPrice).WidthMd(3).ShowValidationMessage(false)
                                @f.FormGroup().TextBoxFor(x => x.PricingInfo.PurchaseOptions[i].Price).WidthMd(3).ShowValidationMessage(false)
                                @f.FormGroup().TextBoxFor(x => x.PricingInfo.PurchaseOptions[i].Quantity).WidthMd(3).ShowValidationMessage(false)
                                @f.FormGroup().TextBoxFor(x => x.PricingInfo.PurchaseOptions[i].Width).WidthMd(4).ShowValidationMessage(false)
                                @f.FormGroup().TextBoxFor(x => x.PricingInfo.PurchaseOptions[i].Depth).WidthMd(4).ShowValidationMessage(false)
                                @f.FormGroup().TextBoxFor(x => x.PricingInfo.PurchaseOptions[i].Height).WidthMd(4).ShowValidationMessage(false)
                                @f.FormGroup().TextAreaFor(x => x.PricingInfo.PurchaseOptions[i].Content).WidthMd(3).ShowValidationMessage(false)
                            </div>
                        </div>
		            </div>
	            }
            </div>
            

            @f.FormGroup().CustomControls(Html.Bootstrap().Button().Text(@Localizer.Get("CreateProduct_Submit")).HtmlAttributes(new { onclick = "trySubmit()" }))  
        }
    </div>
    <div class="col-md-5" id="MMM"></div>
</div>

@section scripts
{
    <script type="text/javascript" src="~/Scripts/dropzone.js"></script>
    <script type="text/javascript" src="~/Scripts/magicsuggest.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.tagsinput.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.combinations.js"></script>

    <script type="text/javascript">
        var catSuggest = null;
        var mainDZ = null;
        $(function(){
            @if (Model.Categories != null)
            {
                @:$("#Categories").attr("value", '@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Classy.DotNet.Responses.AppView.ProductCategories.Where(p => Model.Categories.Contains(p.Value)).Select(p => new { id = p.Value, name = p.Text[System.Threading.Thread.CurrentThread.CurrentUICulture.TwoLetterISOLanguageName] }).ToArray()))');
            }
            else
            {
                @:$("#Categories").attr("value", '[]');
            }
            catSuggest = $("#Categories").magicSuggest({
                placeholder: '@Localizer.Get("CreateListing_CategoriesPlaceHolder")',
                allowFreeEntries: false,
                valueField: 'id',
                name: 'Categories',
                displayField: 'name',
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Classy.DotNet.Responses.AppView.ProductCategories.Select(c => new { id = c.Value, name = c.Text[System.Threading.Thread.CurrentThread.CurrentUICulture.TwoLetterISOLanguageName] })))
                });
            Dropzone.autoDiscover = false;
            $("#externalMedia").dropzone(
                {
                    acceptedFiles: 'image/*', 
                    url: '@Url.RouteUrl("AddMediaFile")',
                    addRemoveLinks: true,
                    removedfile: function (file) {
                        var fileId = file.fileId;
                        var data = { fileId: fileId, listingId: null };
                        $.post("@Url.RouteUrl("RemoveMediaFile")", data, function (response) {
                            if (!response.error)
                                file.previewElement.remove();
                        });
                    },
                    init: function() {
                        mainDZ = this;
                        this.on("complete", function(file) {
                            var response = JSON.parse(file.xhr.responseText);
                            file.fileId = response.fileId;
                        });
                    }
                });
            $("input.tags").tagsInput({
                width: '100%',
                minInputWidth: '100%',
                height: '34px',
                defaultText: 'fill me later',
                onRemoveTag: function (value) {
                    removeVariations(value, $(this).data("idx"), $(this).val() !== "");
                },
                onAddTag: function (value) {
                    renderVariations($(this).val() === value, $(this).data("idx"));
                }
            });
            $(".tagsinput").addClass("bootstrap-tagsinput");
        });

        function trySubmit() {
            $(".overlay").show();
            if (uploadingFiles()){
                setTimeout(trySubmit, 1000);
                return;
            }
            reindexVariations();
            $(".input-validation-error").removeClass("input-validation-error");
            var data = {};
            $("form input[type=text],form input[type=hidden],form select,form textarea").each(function(idx, item){data[$(item).attr("name")] = $(item).val();});
            $("form input[type=checkbox]").each(function(idx, item) { data[$(item).attr("name")] = $(item).is(":checked"); });
            $("#variations div.variation").each(function(idx, item) {
                var vProps = {};
                var props = ['Color', 'Design', 'Size'];
                var vKey = $(item).data("variation");
                $.each(vKey.split('|'), function(kidx, value) { if (value != '_') { vProps[props[kidx]] = value; } });
                data["PricingInfo.PurchaseOptions[" + idx + "].VariantProperties"] = vProps;

                var dz = $(".dropzone", item).data("DZ");
                var optionFiles = [];
                data["PricingInfo.PurchaseOptions[" + idx + "].HasImages"] = ($(".dz-preview", item).length > 0);
                $.each(dz.getAcceptedFiles(), function(ix, file) { optionFiles.push(file.fileId); });
                data["PricingInfo.PurchaseOptions[" + idx + "].MediaFiles"] = optionFiles;
            });
            var mainFiles = [];
            $.each(mainDZ.getAcceptedFiles(), function(idx, file) { mainFiles.push(file.fileId); });
            data.Images = mainFiles;
            var vcount = $("#variations div.variation").length;
            $.post("/product/new/nocollection", data, function(response) { 
                $(".overlay").hide();
                if (response.errors) { 
                    if (response.errors.Categories) {
                        $("div.ms-ctn").addClass("input-validation-error"); delete response.errors["Categories"];
                    }
                    if (response.errors.Images) {
                        $("#externalMedia").addClass("input-validation-error"); delete response.errors["Images"];
                    }
                    var variations = $("#variations div.variation");
                    for (var i = 0; i < vcount; i++) {
                        if (response.errors["PricingInfo.PurchaseOptions[" + i + "].Images"]){
                            $(".dropzone", variations[i]).addClass("input-validation-error");
                            delete response.errors["PricingInfo.PurchaseOptions[" + i + "].Images"];
                        }
                    }
                    $("form").validate().showErrors(response.errors);          
                } else {
                    document.location.href = "@Url.RouteUrl("ProductDetails", new { listingId = "LISTING_ID", slug = "show" })".replace(/LISTING_ID/, response.listingId);
                }
            });
        }

        function uploadingFiles(){
            for (var i = 0; i < Dropzone.instances.length; i++) {
                if (Dropzone.instances[i].getUploadingFiles() > 0) { return true; }
            }
            return false;
        }

        function renderVariations(checkPartial, idx) {
            var variations = [];
            variations = $.combinations([$("#Color").val() !== "" ? $("#Color").val().split(',') : ['_'],
                $("#Design").val() !== "" ? $("#Design").val().split(',') : ['_'],
                $("#Size").val() !== "" ? $("#Size").val().split(',') : ['_']]);

            // ensure variations exist
            var existing = $("#variations div.variation");
            for (var i = 0; i < variations.length; i++) {
                vkey = variations[i].join();
                vpKey = vkey;
                if (checkPartial){
                    var parr = variations[i].slice(0);
                    parr[idx] = '_';
                    vpKey = parr.join();

                    // check exists
                    var $variation = getVariation(vpKey);
                    if ($variation !== null){
                        $variation.data("variation", vkey);
                        $variation.find(".panel-heading > span").html(vkey);
                    }
                }

                if (vkey !== '_,_,_') {
                    if (getVariation(vkey) == null){
                        var v = $("<div class='variation panel panel-default'>" +
                            "<div class='panel-heading'><input checked='checked' id='PricingInfo_PurchaseOptions_" + i + "__Available' name='PricingInfo.PurchaseOptions[" + i + "].Available' type='checkbox'> <span>" + vkey + "</span></div>" +
                            "<div class='panel-body'>" +
                            "<div class='row'>" +
                            "<div class='col-md-3 form-group'><label class='control-label' for='PricingInfo_PurchaseOptions_" + i + "__SKU'>S K U</label><input class='form-control valid' id='PricingInfo_PurchaseOptions_" + i + "__SKU' name='PricingInfo.PurchaseOptions[" + i + "].SKU' type='text' value=''></div>" +
                            "<div class='col-md-3 form-group'><label class='control-label' for='PricingInfo_PurchaseOptions_" + i + "__CompareAtPrice'>Compare At Price</label><input class='form-control valid' id='PricingInfo_PurchaseOptions_" + i + "__CompareAtPrice' name='PricingInfo.PurchaseOptions[" + i + "].ComparedAtPrice' type='text' value='" + $("#PricingInfo_BaseOption_CompareAtPrice").val()  + "'></div>" +
                            "<div class='col-md-3 form-group'><label class='control-label' for='PricingInfo_PurchaseOptions_" + i + "__Price'>Price</label><input class='form-control valid' id='PricingInfo_PurchaseOptions_" + i + "__Price' name='PricingInfo.PurchaseOptions[" + i + "].Price' type='text' value='" + $("#PricingInfo_BaseOption_Price").val()  + "'></div>" +
                            "<div class='col-md-3 form-group'><label class='control-label' for='PricingInfo_PurchaseOptions_" + i + "__Quantity'>Quantity</label><input class='form-control valid' id='PricingInfo_PurchaseOptions_" + i + "__Quantity' name='PricingInfo.PurchaseOptions[" + i + "].Quantity' type='text' value=''></div>" +
                            "<div class='col-md-4 form-group'><label class='control-label' for='PricingInfo_PurchaseOptions_" + i + "__Width'>Width</label><input class='form-control valid' id='PricingInfo_PurchaseOptions_" + i + "__Width' name='PricingInfo.PurchaseOptions[" + i + "].Width' type='text' value='" + $("#PricingInfo_BaseOption_Width").val()  + "'></div>" +
                            "<div class='col-md-4 form-group'><label class='control-label' for='PricingInfo_PurchaseOptions_" + i + "__Depth'>Depth</label><input class='form-control valid' id='PricingInfo_PurchaseOptions_" + i + "__Depth' name='PricingInfo.PurchaseOptions[" + i + "].Depth' type='text' value='" + $("#PricingInfo_BaseOption_Depth").val()  + "'></div>" +
                            "<div class='col-md-4 form-group'><label class='control-label' for='PricingInfo_PurchaseOptions_" + i + "__Height'>Height</label><input class='form-control valid' id='PricingInfo_PurchaseOptions_" + i + "__Height' name='PricingInfo.PurchaseOptions[" + i + "].Height' type='text' value='" + $("#PricingInfo_BaseOption_Height").val()  + "'></div>" +
                            "<div class='col-md-12 form-group'><label class='control-label' for='PricingInfo_PurchaseOptions_" + i + "__Content'>Content</label><textarea rows='4' class='form-control valid' id='PricingInfo_PurchaseOptions_" + i + "__Content' name='PricingInfo.PurchaseOptions[" + i + "].Content'>" + $("#Content").val()  + "</textarea></div>" +
                            "<div class='col-md-12 form-group'><div id='PricingInfo_PurchaseOptions_Media" + i + "' class='dropzone'><div class='dz-default dz-message'><span>@Localizer.Get("CreateListing_DropFiles")</span></div></div></div>" +
                            "</div>" +
                            "</div></div>");
                        v.data("variation", vkey);
                        $("#variations").append(v);
                        v.find(".dropzone").dropzone(
                        {
                            acceptedFiles: 'image/*', 
                            url: '@Url.RouteUrl("AddMediaFile")',
                            addRemoveLinks: true,
                            removedfile: function (file) {
                                var fileId = file.fileId;
                                var data = { fileId: fileId, listingId: null };
                                $.post("@Url.RouteUrl("RemoveMediaFile")", data, function (response) {
                                    if (!response.error)
                                        file.previewElement.remove();
                                });
                            },
                            init: function() {
                                this.on("complete", function(file) {
                                    var response = JSON.parse(file.xhr.responseText);
                                    file.fileId = response.fileId;
                                });
                                $(this.element).data("DZ", this);
                            }
                        });
                    }
                }
            }
        }

        function getVariation(vkey){
            var variation = null;
            $("#variations div.variation").each(function(idx, item){ if ($(item).data("variation") === vkey) { variation = $(item)}; });
            return variation;
        }

        function removeVariations(key, idx, remove){
            $("#variations div.variation").each(function(i, item){ 
                var varr = $(item).data("variation").split(',');
                if (varr[idx] === key) { 
                    if (remove){
                        $(item).remove(); 
                    } else {
                        varr[idx] = '_';
                        $(item).data("variation", varr.join());
                        $(item).find(".panel-heading > span").html(varr.join());
                    }
                }
            });
        }

        function reindexVariations(){
            $("#variations div.variation").each(function(i, item){ 
                $("input[type=text],input[type=hidden],select,textarea", item).each(function(idx, control){ $(control).attr("name", $(control).attr("name").replace(/\d+/, i)); });
                $("input[type=checkbox]", item).each(function(idx, control){ $(control).attr("name", $(control).attr("name").replace(/\d+/, i)); });
            });
        }
    </script>
}