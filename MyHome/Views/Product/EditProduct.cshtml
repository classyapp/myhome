@model Classy.DotNet.Mvc.ViewModels.Listing.UpdateListingViewModel<MyHome.Models.ProductMetadata>

@{
    ViewBag.Title = Localizer.Get("EditProduct_PageTitle");
    Html.Bootstrap().Globals().ShowRequiredStar(false);
    var categories = Classy.DotNet.Responses.AppView.ProductCategories.AsSelectList();

    var styles = Localizer.GetList("room-styles");
    var currencySign = Classy.DotNet.Responses.AppView.SupportedCurrencies.First(c => c.Value == Model.PricingInfo.CurrencyCode).Sign;
    var cdnurl = System.Configuration.ConfigurationManager.AppSettings["Classy:CloudFrontDistributionUrl"];
}

@section AdditionalStyles {
    <link rel="stylesheet" href="~/Content/ltr/magicsuggest.css" />
    <link rel="stylesheet" href="~/Content/ltr/dropzone.css" />
    <link href="~/Content/ltr/bootstrap-tagsinput.css" rel="stylesheet" />
}

@section ActionBar {
    <a class="btn btn-sm btn-primary" trigger-listing-action="translate" object-id="@Model.Id" object-type="photo"><i class="glyphicon glyphicon-globe"></i>&nbsp;@Localizer.Get("EditListing_Translate")</a>
}


<h2>@Localizer.Get("CreateProduct_PageTitle")</h2>


<div class="row">
    <div class="col-md-7">
        <div class="overlay"></div>
        @Html.Bootstrap().ValidationSummary()

        @using (var f = Html.Bootstrap().Begin(new Form("EdiListing", "Product").Type(FormType._NotSet).HtmlAttributes(new { enctype = "multipart/form-data" })))
        {
            @Html.HiddenFor(x => x.Id);
            @f.FormGroup().TextBoxFor(x => x.Title).ShowValidationMessage(false)
            @f.FormGroup().TextAreaFor(x => x.Content).ShowValidationMessage(false)
            @f.FormGroup().TextBoxFor(x => x.Categories).ShowValidationMessage(false)
            <div class="row">
                @f.FormGroup().DropDownListFor(x => x.Metadata.Style, styles.AsSelectList()).WidthMd(6).ShowValidationMessage(false)
                @f.FormGroup().TextBoxFor(x => x.Metadata.Manufacturer).WidthMd(6).ShowValidationMessage(false)
            </div>
            @Html.HiddenFor(x => x.PricingInfo.CurrencyCode)
            @f.FormGroup().TextBoxFor(x => x.PricingInfo.BaseOption.ProductUrl).ShowValidationMessage(false)
            <hr />
            <div id="externalMedia" class="dropzone">
                <div class="dz-default dz-message">
                    <span>@Localizer.Get("CreateListing_DropFiles")</span>
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-md-3">
                    @f.FormGroup().TextBoxFor(x => x.PricingInfo.BaseOption.SKU).ShowValidationMessage(false)
                </div>
                <div class="col-md-3">
                    @f.FormGroup().TextBoxFor(x => x.PricingInfo.BaseOption.CompareAtPrice).Prepend(currencySign).ShowValidationMessage(false)
                </div>
                <div class="col-md-3">
                    @f.FormGroup().TextBoxFor(x => x.PricingInfo.BaseOption.Price).Prepend(currencySign).ShowValidationMessage(false)
                </div>
                <div class="col-md-3">
                    @f.FormGroup().TextBoxFor(x => x.PricingInfo.BaseOption.Quantity).ShowValidationMessage(false)
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-md-4">
                    @f.FormGroup().TextBoxFor(x => x.PricingInfo.BaseOption.Width).Append("cm").ShowValidationMessage(false)
                </div>
                <div class="col-md-4">
                    @f.FormGroup().TextBoxFor(x => x.PricingInfo.BaseOption.Depth).Append("cm").ShowValidationMessage(false)
                </div>
                <div class="col-md-4">
                    @f.FormGroup().TextBoxFor(x => x.PricingInfo.BaseOption.Height).Append("cm").ShowValidationMessage(false)
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    @f.FormGroup().TextBoxFor(x => x.Metadata.Materials).ShowValidationMessage(false)
                </div>
                <div class="col-md-6">
                    @f.FormGroup().TextBoxFor(x => x.Metadata.Designer).ShowValidationMessage(false)
                </div>
            </div>
            <hr />
            @f.FormGroup().TextBox("Color").Class("tags").ShowValidationMessage(false)
            @f.FormGroup().TextBox("Design").Class("tags").ShowValidationMessage(false)
            @f.FormGroup().TextBox("Size").Class("tags").ShowValidationMessage(false)
            <hr />
            <div id="variations">
                @if (Model.PricingInfo.PurchaseOptions != null)
                {
                    for (int i = 0; i < Model.PricingInfo.PurchaseOptions.Count; i++)
	                {
		                <div class="variation panel panel-default" data-variation="@string.Join(",", Model.PricingInfo.PurchaseOptions[i].VariantProperties.Values)">
                            <div class="panel-heading">@string.Join(",", Model.PricingInfo.PurchaseOptions[i].VariantProperties.Values)</div>
                            <div class="panel-body">
                                <div class="row">
                                    @Html.HiddenFor(x => x.PricingInfo.PurchaseOptions[i].Color)
                                    @Html.HiddenFor(x => x.PricingInfo.PurchaseOptions[i].Design)
                                    @Html.HiddenFor(x => x.PricingInfo.PurchaseOptions[i].Size)
                                    @f.FormGroup().TextBoxFor(x => x.PricingInfo.PurchaseOptions[i].SKU).WidthMd(3).ShowValidationMessage(false)
                                    @f.FormGroup().TextBoxFor(x => x.PricingInfo.PurchaseOptions[i].CompareAtPrice).WidthMd(3).ShowValidationMessage(false)
                                    @f.FormGroup().TextBoxFor(x => x.PricingInfo.PurchaseOptions[i].Price).WidthMd(3).ShowValidationMessage(false)
                                    @f.FormGroup().TextBoxFor(x => x.PricingInfo.PurchaseOptions[i].Quantity).WidthMd(3).ShowValidationMessage(false)
                                    @f.FormGroup().TextBoxFor(x => x.PricingInfo.PurchaseOptions[i].Width).WidthMd(4).ShowValidationMessage(false)
                                    @f.FormGroup().TextBoxFor(x => x.PricingInfo.PurchaseOptions[i].Depth).WidthMd(4).ShowValidationMessage(false)
                                    @f.FormGroup().TextBoxFor(x => x.PricingInfo.PurchaseOptions[i].Height).WidthMd(4).ShowValidationMessage(false)
                                    @f.FormGroup().TextAreaFor(x => x.PricingInfo.PurchaseOptions[i].Content).HtmlAttributes(new { Rows = 4 }).WidthMd(12).ShowValidationMessage(false)
                                    <div class='col-md-12 form-group'>
                                        <div id='PricingInfo_PurchaseOptions_Media' class='dropzone'>
                                            <div class='dz-default dz-message'><span>@Localizer.Get("CreateListing_DropFiles")</span></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
		                </div>
	                }
                }
            </div>
            

            @f.FormGroup().CustomControls(Html.Bootstrap().Button().Text(@Localizer.Get("CreateProduct_Submit")).HtmlAttributes(new { onclick = "trySubmit()" }))  
        }
    </div>
    <div class="col-md-5" id="MMM"></div>
</div>

@section scripts
{
    <script type="text/javascript" src="~/Scripts/dropzone.js"></script>
    <script type="text/javascript" src="~/Scripts/magicsuggest.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.tagsinput.js"></script>

    <script type="text/javascript">
        var catSuggest = null;
        var mainDZ = null;
        $(function(){
            @if (Model.Categories != null)
            {
                @:$("#Categories").attr("value", '@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Classy.DotNet.Responses.AppView.ProductCategories.Where(p => Model.Categories.Contains(p.Value)).Select(p => new { id = p.Value, name = p.Text[System.Threading.Thread.CurrentThread.CurrentUICulture.TwoLetterISOLanguageName] }).ToArray()))');
            }
            else
            {
                @:$("#Categories").attr("value", '[]');
            }
            catSuggest = $("#Categories").magicSuggest({
                placeholder: '@Localizer.Get("CreateListing_CategoriesPlaceHolder")',
                allowFreeEntries: false,
                valueField: 'id',
                name: 'Categories',
                displayField: 'name',
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Classy.DotNet.Responses.AppView.ProductCategories.Select(c => new { id = c.Value, name = c.Text[System.Threading.Thread.CurrentThread.CurrentUICulture.TwoLetterISOLanguageName] })))
                });
            var colors = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.PricingInfo.GetVariantOptionValues("Color").Split(new char[] {','}, StringSplitOptions.RemoveEmptyEntries)));
            var designs = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.PricingInfo.GetVariantOptionValues("Design").Split(new char[] {','}, StringSplitOptions.RemoveEmptyEntries)));
            var sizes = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.PricingInfo.GetVariantOptionValues("Size").Split(new char[] {','}, StringSplitOptions.RemoveEmptyEntries)));
            if (colors.length > 0) { $("#Color").val(colors); }
            if (designs.length > 0) { $("#Design").val(designs); }
            if (sizes.length > 0) { $("#Size").val(sizes); }
            $("input.tags").tagsInput({
                width: '100%',
                minInputWidth: '100%',
                height: '34px',
                defaultText: 'fill me later',
                onRemoveTag: function (value) {
                },
                onAddTag: function (value) {
                }
            });
            $(".tagsinput").addClass("bootstrap-tagsinput");
            $(".tagsinput input").addClass("form-control").on('blur', renderVariations);
            Dropzone.autoDiscover = false;
            $("#externalMedia").dropzone(
                {
                    acceptedFiles: 'image/*', 
                    url: '@Url.RouteUrl("AddMediaFile")',
                    addRemoveLinks: true,
                    removedfile: function (file) {
                        var fileId = file.fileId;
                        var data = { fileId: fileId };
                        if (file.listingId) { data.listingId = file.listingId; }
                        $.post("@Url.RouteUrl("RemoveMediaFile")", data, function (response) {
                            if (!response.error)
                                file.previewElement.remove();

                            if ($(mainDZ.element).find(".dz-preview").length > 0){
                                $(mainDZ.element).addClass("dz-started");
                            }
                        });
                    },
                    init: function() {
                        mainDZ = this;
                        this.on("complete", function(file) {
                            var response = JSON.parse(file.xhr.responseText);
                            file.fileId = response.fileId;
                        });
                        // populate existing files as mock
                        var existingImages = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.PricingInfo.BaseOption.MediaFiles.Select(f => f.Key).ToArray()));
                        for (var i = 0; i < existingImages.length; i++) {
                            var mockFile = { name: "Existing image", size: "", fileId: existingImages[i], listingId: "@Model.Id" };
                            this.emit("addedfile", mockFile);
                            this.emit("thumbnail", mockFile, "https://@(cdnurl)/thumbnail/" + existingImages[i] + "?Width=270&Height=270&format=json");
                        }
                    }
                });
            @if (Model.PricingInfo.PurchaseOptions != null)
            {
                @:var existingOptionsImages = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.PricingInfo.PurchaseOptions.Select(o => o.MediaFiles.Select(f => f.Key).ToArray()).ToArray()));
            }
            $("#variations .variation").each(function(idx, item) {
                $(".dropzone", item).dropzone({
                    acceptedFiles: 'image/*', 
                    url: '@Url.RouteUrl("AddMediaFile")',
                    addRemoveLinks: true,
                    removedfile: function (file) {
                        var fileId = file.fileId;
                        var data = { fileId: fileId };
                        if (file.listingId) { data.listingId = file.listingId; }
                        var dz = this;
                        $.post("@Url.RouteUrl("RemoveMediaFile")", data, function (response) {
                            if (!response.error)
                                file.previewElement.remove();

                            if ($(dz.element).find(".dz-preview").length > 0){
                                $(dz.element).addClass("dz-started");
                            }
                        });
                    },
                    init: function() {
                        $(this.element).data("DZ", this);
                        this.on("complete", function(file) {
                            var response = JSON.parse(file.xhr.responseText);
                            file.fileId = response.fileId;
                        });
                    }
                });
                for (var i = 0; i < existingOptionsImages[idx].length; i++) {
                    var mockFile = { name: "Existing image", size: "", fileId: existingOptionsImages[idx][i], listingId: "@Model.Id" };
                    Dropzone.instances[idx + 1].emit("addedfile", mockFile);
                    Dropzone.instances[idx + 1].emit("thumbnail", mockFile, "https://@(cdnurl)/thumbnail/" + existingOptionsImages[idx][i] + "?Width=270&Height=270&format=json");
                }
            });
        });

        function trySubmit() {
            $(".overlay").show();
            if (uploadingFiles()){
                setTimeout(trySubmit, 1000);
                return;
            }
            $(".input-validation-error").removeClass("input-validation-error");
            var data = {};
            $("form input[type=text],form input[type=hidden],form select,form textarea").each(function(idx, item){data[$(item).attr("name")] = $(item).val();});
            $("#variations div.variation").each(function(idx, item) {
                var vProps = {};
                var props = ['Color', 'Design', 'Size'];
                var vKey = $(item).data("variation");
                $.each(vKey.split('|'), function(kidx, value) { if (value != '_') { vProps[props[kidx]] = value; } });
                data["PricingInfo.PurchaseOptions[" + idx + "].VariantProperties"] = vProps;

                var dz = $(".dropzone", item).data("DZ");
                var optionFiles = [];
                data["PricingInfo.PurchaseOptions[" + idx + "].HasImages"] = ($(".dz-preview", item).length > 0);
                $.each(dz.getAcceptedFiles(), function(ix, file) { optionFiles.push(file.fileId); });
                data["PricingInfo.PurchaseOptions[" + idx + "].MediaFiles"] = optionFiles;
            });
            var mainFiles = [];
            $.each(mainDZ.getAcceptedFiles(), function(idx, file) { mainFiles.push(file.fileId); });
            data.Images = mainFiles;
            data.HasImages = ($(mainDZ.element).find(".dz-preview").length > 0);
            $.post("/product/@Model.Id/edit", data, function(response) { 
                $(".overlay").hide();
                if (response.errors) { 
                    if (response.errors.Categories) {
                        $("div.ms-ctn").addClass("input-validation-error"); delete response.errors["Categories"];
                    }
                    if (response.errors.Images) {
                        //$("div.ms-ctn").addClass("input-validation-error"); delete response.errors["Images"];
                    }
                    $("form").validate().showErrors(response.errors);                   
                } else {
                    document.location.href = "@Url.RouteUrl("ProductDetails", new { listingId = "LISTING_ID", slug = "show" })".replace(/LISTING_ID/, response.listingId);
                }
            });
    }

    function uploadingFiles(){
        for (var i = 0; i < Dropzone.instances.length; i++) {
            if (Dropzone.instances[i].getUploadingFiles() > 0) { return true; }
        }
        return false;
    }

    function renderVariations(){
        var values = [];
        var variations = [];
        if ($("#Color").val() !== "") { values.push($("#Color").val().split(',')); }
        if ($("#Design").val() !== "") { values.push($("#Design").val().split(',')); }
        if ($("#Size").val() !== "") { values.push($("#Size").val().split(',')); }

        var totalVariations = 1;
        for (var i = 0; i < values.length; i++) {
            totalVariations = totalVariations * values[i].length;
            variations[i] = {};
        }

        for (var i = 0; i < totalVariations; i++) { variations[i] = {}; }

        var colors = ($("#Color").val() !== "" ? $("#Color").val().split(',').length : 0);
        var designs = ($("#Design").val() !== "" ? $("#Design").val().split(',').length : 0);
        var sizes = ($("#Size").val() !== "" ? $("#Size").val().split(',').length : 0);

        var vidx = 0;
        if (colors > 0){
            colors = $("#Color").val().split(',');
            fillGroups(variations, totalVariations, colors, "Color", totalVariations / colors.length);
            vidx++;
        }

        if (designs > 0){
            var designs = $("#Design").val().split(',');
            if (vidx == 1) { fillStriped(variations, totalVariations, designs, "Design", designs.length); }
            else { fillGroups(variations, totalVariations, designs, "Design", totalVariations / designs.length); }
            vidx++;
        }

        if (sizes > 0) {
            sizes = $("#Size").val().split(',');
            if (vidx == 2) { fillGroups(variations, totalVariations, sizes, "Size", designs.length); }
            else if (vidx == 1) { fillStriped(variations, totalVariations, sizes, "Size", sizes.length); }
            else { fillGroups(variations, totalVariations, sizes, "Size", totalVariations / sizes.length); }
            vidx++;
        }

        // ensure variations exist
        var existing = $("#variations div.variation[data-variation]");
        var keys = {};
        existing.each(function(idx, item){ keys[$(item).data("variation")] = 1; });
        for (var i = 0; i < totalVariations; i++) {
            vkey = (variations[i].Color || '_') + '|' + (variations[i].Design || '_') + '|'  + (variations[i].Size || '_');
            if (vkey != '_|_|_') {
                if ($("#variations div.variation[data-variation='" + vkey + "']").length == 0){
                    var v = $("<div class='variation panel panel-default' data-variation='" + vkey + "'><div class='panel-heading'>" + vkey.split('|').join(',') + "</div>" +
                        "<div class='panel-body'>" +
                        "<div class='row'>" +
                        "<div class='col-md-3 form-group'><label class='control-label' for='PricingInfo_PurchaseOptions_" + i + "__SKU'>S K U</label><input class='form-control valid' id='PricingInfo_PurchaseOptions_" + i + "__SKU' name='PricingInfo.PurchaseOptions[" + i + "].SKU' type='text' value='" + $("#PricingInfo_BaseOption_SKU").val()  + "'></div>" +
                        "<div class='col-md-3 form-group'><label class='control-label' for='PricingInfo_PurchaseOptions_" + i + "__CompareAtPrice'>Compare At Price</label><input class='form-control valid' id='PricingInfo_PurchaseOptions_" + i + "__CompareAtPrice' name='PricingInfo.PurchaseOptions[" + i + "].ComparedAtPrice' type='text' value='" + $("#PricingInfo_BaseOption_CompareAtPrice").val()  + "'></div>" +
                        "<div class='col-md-3 form-group'><label class='control-label' for='PricingInfo_PurchaseOptions_" + i + "__Price'>Price</label><input class='form-control valid' id='PricingInfo_PurchaseOptions_" + i + "__Price' name='PricingInfo.PurchaseOptions[" + i + "].Price' type='text' value='" + $("#PricingInfo_BaseOption_Price").val()  + "'></div>" +
                        "<div class='col-md-3 form-group'><label class='control-label' for='PricingInfo_PurchaseOptions_" + i + "__Quantity'>Quantity</label><input class='form-control valid' id='PricingInfo_PurchaseOptions_" + i + "__Quantity' name='PricingInfo.PurchaseOptions[" + i + "].Quantity' type='text' value=''></div>" +
                        "<div class='col-md-4 form-group'><label class='control-label' for='PricingInfo_PurchaseOptions_" + i + "__Width'>Width</label><input class='form-control valid' id='PricingInfo_PurchaseOptions_" + i + "__Width' name='PricingInfo.PurchaseOptions[" + i + "].Width' type='text' value='" + $("#PricingInfo_BaseOption_Width").val()  + "'></div>" +
                        "<div class='col-md-4 form-group'><label class='control-label' for='PricingInfo_PurchaseOptions_" + i + "__Depth'>Depth</label><input class='form-control valid' id='PricingInfo_PurchaseOptions_" + i + "__Depth' name='PricingInfo.PurchaseOptions[" + i + "].Depth' type='text' value='" + $("#PricingInfo_BaseOption_Depth").val()  + "'></div>" +
                        "<div class='col-md-4 form-group'><label class='control-label' for='PricingInfo_PurchaseOptions_" + i + "__Height'>Height</label><input class='form-control valid' id='PricingInfo_PurchaseOptions_" + i + "__Height' name='PricingInfo.PurchaseOptions[" + i + "].Height' type='text' value='" + $("#PricingInfo_BaseOption_Height").val()  + "'></div>" +
                        "<div class='col-md-12 form-group'><label class='control-label' for='PricingInfo_PurchaseOptions_" + i + "__Content'>Content</label><textarea rows='4' class='form-control valid' id='PricingInfo_PurchaseOptions_" + i + "__Content' name='PricingInfo.PurchaseOptions[" + i + "].Content'>" + $("#Content").val()  + "</textarea></div>" +
                        "<div class='col-md-12 form-group'><div id='PricingInfo_PurchaseOptions_Media' class='dropzone'><div class='dz-default dz-message'><span>@Localizer.Get("CreateListing_DropFiles")</span></div></div></div>" +
                        "</div>" +
                        "</div></div>");
                    $("#variations").append(v);
                    v.find(".dropzone").dropzone(
                    {
                        acceptedFiles: 'image/*', 
                        url: '@Url.RouteUrl("AddMediaFile")',
                            addRemoveLinks: true,
                            removedfile: function (file) {
                                var fileId = file.fileId;
                                var data = { fileId: fileId, listingId: null };
                                $.post("@Url.RouteUrl("RemoveMediaFile")", data, function (response) {
                                    if (!response.error)
                                        file.previewElement.remove();
                                });
                            },
                            init: function() {
                                this.on("complete", function(file) {
                                    var response = JSON.parse(file.xhr.responseText);
                                    file.fileId = response.fileId;
                                });
                                $(this.element).data("DZ", this);
                            }
                        });
                }
            }
            delete keys[vkey];
        }

        for(var key in keys) { 
            $("#variations div.variation[data-variation='" + key + "']").remove(); 
        }
    }

    function fillNormal(variations, totalVariations, values, name, num){
        for (var i = 0; i < totalVariations; i++) {
            var idx = (totalVariations == values.length ? i : Math.floor(i / num));
            variations[i][name] = values[idx];
        }
    }

    function fillGroups(variations, totalVariations, values, name, num){
        var j = -1;
        for (var i = 0; i < totalVariations; i++) {
            if (i % num == 0) { j++; j = Math.floor(j % values.length); }; 
            variations[i][name] = values[j];
        }
    }

    function fillStriped(variations, totalVariations, values, name, num){
        for (var i = 0; i < totalVariations; i++) {
            variations[i][name] = values[i % num];
        }
    }

    $(".tags").on('change', function(){
        renderVariations();
    });
    </script>
}