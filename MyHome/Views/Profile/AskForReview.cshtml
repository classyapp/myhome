@model Classy.DotNet.Mvc.ViewModels.Profiles.AskForReviewModel

@{
    ViewBag.Title = Localizer.Get("AskForReview_PageTitle");
}

<div class="row">
    <div class="col-md-8 main">
        <h1>@Localizer.Get("AskForReview_PageTitle")</h1>
        <hr />

        @Html.Bootstrap().ValidationSummary()
       
        @if (Model.IsGoogleConnected)
        {
            if (Model.GoogleContacts != null && Model.GoogleContacts.Count() > 0)
            {
                <h4>@Localizer.Get("AskForReview_GoogleContactsTitle")</h4>
                <div class="google-contacts">
                    <table class="table table-condensed">
                        @foreach (var contact in Model.GoogleContacts)
                        {
                            <tr>
                                <td>@contact.Name</td>
                                <td><a class="email" data-email="@contact.Email" onclick="addContact(this)">@contact.Email</a></td>
                            </tr>
                        }
                    </table>
                </div>
            }
            else
            {
                <h4>@Localizer.Get("AskForReview_LoadingGmailContacts")</h4>
            }
        }

        @using (var f = Html.Bootstrap().Begin(new Form("AskForReview").RouteValues(new { ProfileId = Model.ProfileId }).FormMethod(FormMethod.Post).Id("AskForReviewForm").Type(FormType.Horizontal)))
        {
            
                @f.FormGroup().TextAreaFor(x => x.Contacts).Rows(3).HelpText(Localizer.Get("AskForReview_Message_Help")).ShowValidationMessage(false).Label().ShowRequiredStar(false)
                @f.FormGroup().TextAreaFor(x => x.Message).Rows(5).Value(Localizer.Get("AskForReview_DefaultMessage")).ShowValidationMessage(false).Label().ShowRequiredStar(false)
            
            @*@Html.Bootstrap().CheckBoxFor(x => x.SaveAsDefault).IsChecked(false).ShowValidationMessage(false).Label().ShowRequiredStar(false)*@
            @f.FormGroup().CustomControls(Html.Bootstrap().Button().Text(Localizer.Get("AskForReview_Submit")).Style(ButtonStyle.Primary).HtmlAttributes(new { onclick = "AskForReviewForm.submit()" }))
        }
    </div>

    <div class="col-md-3 col-md-offset-1 helpbar">
        <div class="helpbar">
            <h1>@Localizer.Get("AskForReview_Help_Title")</h1>
            <div class="content">
                <p>@Localizer.Get("AskForReview_Help_Content")</p>
                <div>
                    @if (!Model.IsGoogleConnected)
                    {
                        <hr/>
                        <p><strong>@Localizer.Get("AskForReview_Help_ImportTitle")</strong></p>
                        <a href="#" onclick="auth()" class="btn btn-danger btn-block">@Localizer.Get("AskForReview_ImportFromGmail")</a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    div.tagsinput {
        border: 1px solid #CCC;
        background: #FFF;
        padding: 5px;
        width: 300px;
        height: 100px;
        overflow-y: auto;
    }

        div.tagsinput span.tag {
            border: 1px solid #3276b1;
            -moz-border-radius: 2px;
            -webkit-border-radius: 2px;
            display: block;
            float: left;
            padding: 5px;
            text-decoration: none;
            background: #d9edf7;
            color: #3276b1;
            margin-right: 5px;
            margin-bottom: 5px;
            font-family: helvetica;
            font-size: 13px;
        }

        div.tagsinput span.tag a {
            font-weight: bold;
            color: #3276b1;
            text-decoration: none;
            font-size: 11px;
        }

        div.tagsinput input {
            width: 80px;
            margin: 0px;
            font-family: helvetica;
            font-size: 13px;
            border: 1px solid transparent;
            padding: 5px;
            background: transparent;
            color: #000;
            outline: 0px;
            margin-right: 5px;
            margin-bottom: 5px;
        }

        div.tagsinput div {
            display: block;
            float: left;
        }

    .tags_clear {
        clear: both;
        width: 100%;
        height: 0px;
    }

    .not_valid {
        background: #FBD8DB !important;
        color: #90111A !important;
    }

    .contactList .control-label {
        text-align: left;
    }
</style>

@section scripts
{
    @Scripts.Render("~/Scripts/jquery.tagsinput.js")

    <script type="text/javascript">
        (function () {
            var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
            po.src = 'https://apis.google.com/js/client:plusone.js?onload=gapiReady';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
        })();

        var additionalParams = {
            client_id: "178124155711-2sad5cqdcbtp7bi74modj49e89474qc7.apps.googleusercontent.com",
            scope: "https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/contacts.readonly",
            immediate: true
        };

        function auth() {
            gapi.auth.authorize(additionalParams, signinCallback);
        }

        function signinCallback(authResult) {
            if (authResult && !authResult.error) {
                var authParams = gapi.auth.getToken();
                GoogleLogin(authParams.access_token);
            } else {
                additionalParams.immediate = false;
                gapi.auth.authorize(additionalParams, signinCallback);
            }
        }

        function addContact(anchor) {
            var email = $(anchor).data("email");
            if (!$('#Contacts').tagExist(email)) {
                $(anchor).parents('tr').toggleClass('selected');
                $('#Contacts').addTag(email);
            }
        }


        $('#Contacts').tagsInput({
            width: 'auto',
            minInputWidth: 'auto',
            defaultText: '@Localizer.Get("AskForReview_AddEmail")',
            onRemoveTag: function (email) {
                $('a[data-email="' + email + '"]').parents('tr').toggleClass('selected');
            }
        });

        function gapiReady() {
            @if (Model.IsGoogleConnected && Model.GoogleContacts == null)
            {
                <text>
                auth();
                </text>
            }
        }
    </script>
}