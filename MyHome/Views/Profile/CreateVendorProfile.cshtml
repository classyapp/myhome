@model Classy.DotNet.Mvc.ViewModels.Profiles.CreateVendorProfileViewModel<MyHome.Models.VendorMetadata>

@{
    ViewBag.Title = Localizer.Get("CreateVendorProfile_PageTitle");
}

<div class="row">
    @using (var f = Html.Bootstrap().Begin(new Form("CreateVendorProfile").Type(FormType._NotSet).Id("proForm").RouteValues(new { ProfileId = Model.ProfileId }).FormMethod(FormMethod.Post)))
    {
        <div class="col-md-7 main">
            <h1>@Localizer.Get("CreateVendorProfile_PageTitle")</h1>

            @Html.Bootstrap().ValidationSummary()

            <h4>@Localizer.Get("CreateVendorProfile_Agreement")</h4>
            <hr />

            <h3>@Localizer.Get("CreateVendorProfile_BusinessInfo")</h3>
            @f.FormGroup().TextBoxFor(x => x.CompanyName)
            @f.FormGroup().DropDownListFor(x => x.Category, Localizer.GetList("professional-categories").AsSelectList()).OptionLabel(Localizer.Get("CreateVendorProfile_ChooseCategory"))
            @f.FormGroup().TextBoxFor(x => x.WebsiteUrl).Placeholder("http://")

            <h3>@Localizer.Get("CreateVendorProfile_ContactInfo")</h3>
            @f.FormGroup().TextBoxFor(x => x.Street1)
            @f.FormGroup().TextBoxFor(x => x.City)
            @f.FormGroup().DropDownListFor(x => x.Country, Localizer.GetList("supported-countries").AsSelectList())
            @f.FormGroup().TextBoxFor(x => x.PostalCode)
            @f.FormGroup().TextBoxFor(x => x.Email).Readonly()
            @f.FormGroup().TextBoxFor(x => x.Phone)
            @f.FormGroup().TextBoxFor(x => x.Fax)

            <h3>@Localizer.Get("CreateVendorProfile_PerformanceStandards")</h3>
            <div>@Localizer.Get("CreateVendorProfile_PerformanceStandards_Content")</div>
            <p>&nbsp;</p>
            <div class="well">
                @Localizer.Get("CreateVendorProfile_AgreementHeader")
                <p>&nbsp;</p>
                @Html.Bootstrap().CheckBoxFor(x => x.Metadata.AgreeToTerms).IsChecked(false).ShowValidationMessage(false).Label().LabelText(string.Format(Localizer.Get("VendorMetadata_Terms"), Html.RouteLink(Localizer.Get("Vendor_TermsOfUse"), "Terms"))).ShowRequiredStar(false)
                @f.FormGroup().TextBoxFor(x => x.Metadata.SigneeName)
                @f.FormGroup().TextBoxFor(x => x.Metadata.SigneeTitle)
            </div>
            <br />
            <br />
            @f.FormGroup().CustomControls(Html.Bootstrap().SubmitButton().Text(Localizer.Get("CreateVendorProfile_Submit")).Style(ButtonStyle.Primary))
        </div>
        <div class="col-md-4 col-md-offset-1">
            <div class="helpbar">
                <h1>@Localizer.Get("CreateVendorProfile_Copy_Title")</h1>
                <div>@Html.Raw(Localizer.Get("CreateVendorProfile_Copy_Content"))</div>
            </div>
            <hr/>
            <div class="alert alert-info">
                @Localizer.Get("CreateVendorProfile_DefaultCultureInfo")
                <br/><br/>
                @f.FormGroup().DropDownListFor(x => x.DefaultCulture, Localizer.GetList("supported-cultures").AsSelectList()).Label().Class("hidden")
            </div>
        </div>
    }
</div>

@section scripts {
    <script>
        jQuery.validator.unobtrusive.adapters.add("brequired", function (options) {
            //b-required for checkboxes
            if (options.element.tagName.toUpperCase() == "INPUT" && options.element.type.toUpperCase() == "CHECKBOX") {
                //setValidationValues(options, "required", true);
                options.rules["required"] = true;
                if (options.message) {
                    options.messages["required"] = options.message;
                }
            }
        });

        $(function () {
            $.data($('#proForm')[0], 'validator').settings.ignore = ".ignore";
        });
    </script>
}