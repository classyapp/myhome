@model Classy.DotNet.Mvc.ViewModels.Profiles.EditProfileViewModel<MyHome.Models.ProfessionalMetadata, MyHome.Models.UserMetadata>

@{
    ViewBag.Title = Localizer.Get("EditProfile_BrowserTitle");
}

@section ActionBar {
    <a href="#" onclick="ChangePassword()" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-lock"></i>&nbsp;@Localizer.Get("Profile_ChangePassword")</a>

    <button class="update-image btn btn-primary btn-sm ">
        <i class="glyphicon glyphicon-picture"></i>&nbsp;@Localizer.Get("Profile_Change_Photo")
        <input type="file" name="profileImage" data-url="@Url.RouteUrl("ChangeProfileImage", new { ProfileId = Model.ProfileId })" data-profile-id="@Model.ProfileId" value="" onchange="ChangeProfilePhoto(this)" />
    </button>

    @if (Model.IsProfessional) {
        <a class="btn btn-primary btn-sm" trigger-profile-action="translate" object-id="@Model.ProfileId" object-type="profile"><i class="glyphicon glyphicon-globe"></i>&nbsp;@Localizer.Get("EditProfile_Translate")</a>
    }
} 
        
<div class="row">
    <div class="col-md-12">
        <div class="ajax-alert"></div>

        <div id="changePasswordSuccess" class="alert alert-success alert-dismissable hidden">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
            @Localizer.Get("ChangePassword_Success")
        </div>
        <div id="uploadProfilePicSuccess" class="alert alert-success alert-dismissable hidden">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
            @Localizer.Get("UploadProfilePic_Success")
        </div>
    </div>

    <div class="col-md-3 text-center">
        <img id="profileImage" class="img-circle" src="@Model.AvatarUrl" width="150" />
        <div class="clearfix"></div>
        <div class="upload-status hidden">
            <img src="/img/ajax-loader.gif" /><div>@Localizer.Get("EditProfile_Uploading")</div>
        </div>
    </div>

    <div class="col-md-9 main">
        @Html.Bootstrap().ValidationSummary()
        @using (var f = Html.Bootstrap().Begin(new Form("EditProfile").RouteValues(new { ProfileId = Model.ProfileId }).FormMethod(FormMethod.Post)))
        {
            @Html.HiddenFor(x => x.IsProfessional)
            @Html.HiddenFor(x => x.Username)
            @Html.HiddenFor(x => x.DefaultCulture)
            
            <h4>@Localizer.Get("EditProfile_AccountDetails")</h4>
            <hr/>

            <div class="form-group">
                @Html.Bootstrap().LabelFor(x => x.Username).ShowRequiredStar(false)
                <div>
                    <p class="form-control-static">@Html.DisplayFor(x => x.Username)</p>
                </div>
            </div>
            
            @f.FormGroup().TextBoxFor(x => x.Email).ShowValidationMessage(false).Label().ShowRequiredStar(false)
           
            <p>&nbsp;</p>
            <h4>@Localizer.Get("EditProfile_ContactDetails")</h4>
            <hr/>
            
            @f.FormGroup().TextBoxFor(x => x.FirstName).ShowValidationMessage(false).Label().ShowRequiredStar(false)
            @f.FormGroup().TextBoxFor(x => x.LastName).ShowValidationMessage(false).Label().ShowRequiredStar(false)
            
            if (Model.IsProfessional)
            {
                @f.FormGroup().TextBoxFor(x => x.Street1).ShowValidationMessage(false).Label().ShowRequiredStar(false)
                @f.FormGroup().TextBoxFor(x => x.Street2).ShowValidationMessage(false).Label().ShowRequiredStar(false)
                @f.FormGroup().TextBoxFor(x => x.City).ShowValidationMessage(false).Label().ShowRequiredStar(false)
                @f.FormGroup().DropDownListFor(x => x.Country, Localizer.GetList("supported-countries").AsSelectList()).ShowValidationMessage(false).Label().ShowRequiredStar(false)
                @f.FormGroup().TextBoxFor(x => x.PostalCode).ShowValidationMessage(false).Label().ShowRequiredStar(false)
            
                <p>&nbsp;</p>
                <h4>@Localizer.Get("EditProfile_BusinessDetails")</h4>
                <hr/>
                
                @f.FormGroup().TextBoxFor(x => x.CompanyName).ShowValidationMessage(false).Label().ShowRequiredStar(false)
                @f.FormGroup().DropDownListFor(x => x.Category, Localizer.GetList("professional-categories").AsSelectList()).OptionLabel(Localizer.Get("EditProfile_SelectCategory")).ShowValidationMessage(false).Label().ShowRequiredStar(false)
            
                @f.FormGroup().TextBoxFor(x => x.WebsiteUrl).Placeholder("http://").Label().ShowRequiredStar(false)
                @f.FormGroup().TextBoxFor(x => x.Phone).ShowValidationMessage(false).Label().ShowRequiredStar(false)
            
                @f.FormGroup().TextBoxFor(x => x.ProfessionalMetadata.LicenseNo).Label().ShowRequiredStar(false)
                @f.FormGroup().TextAreaFor(x => x.ProfessionalMetadata.BusinessDescription).ShowValidationMessage(false).Rows(5).Label().ShowRequiredStar(false)
                @f.FormGroup().TextAreaFor(x => x.ProfessionalMetadata.ServicesProvided).ShowValidationMessage(false).Label().ShowRequiredStar(false)
                @f.FormGroup().TextAreaFor(x => x.ProfessionalMetadata.AreasServed).ShowValidationMessage(false).Label().ShowRequiredStar(false)
                @*<div>job cost from: --- to: ---</div>
                @f.FormGroup().TextAreaFor(x => x.ProfessionalMetadata.CostDetails).ShowValidationMessage(false).Label().WidthLg(12)*@
                @f.FormGroup().TextAreaFor(x => x.ProfessionalMetadata.Awards).ShowValidationMessage(false).Label().ShowRequiredStar(false)
            }
            else 
            {
                
            }

            <div>
                <p>&nbsp;</p>
                <hr/>

                @f.FormGroup().CustomControls(Html.Bootstrap().SubmitButton().Text(Localizer.Get("EditProfile_Submit")).Style(ButtonStyle.Primary))
            </div>
        }

    </div>
</div>

<!-- change password -->
<div class="modal fade" id="change-password-modal" data-remote="@Url.RouteUrl("ChangePassword", new { ProfileId = Model.ProfileId })" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content" id="change-password-replace">
            <!-- will be replaced -->
        </div>
    </div>
</div>

<div class="modal fade" id="translate-modal" data-remote="" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" id="translate-modal-replace">
            <!-- will be replaced -->
        </div>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/scripts/xhr-upload.js")

<script>
    function ChangePassword(e) {
        $('#change-password-modal')
            .modal('show')
            .on("loaded.bs.modal", function () { attachValidation(frmChangePassword); });
    }

    function ChangeProfilePhoto(file) {
        if (file.value != "") {
            var upload = new XHRFileUpload($(file).data("url"), file.files[0], { Fields: 16, ProfileId: $(file).data("profile-id") });
            $(".upload-status").removeClass("hidden");
            upload.upload(function (e) { }, function (e) {
                $('#profileImage, li.profile img').attr("src", e.url);
                $(".upload-status").addClass("hidden");
                $('#uploadProfilePicSuccess').removeClass('hidden');
            }, function (e) {
                // failed
            });
        }
    }
</script>
}
