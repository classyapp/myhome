@model Classy.DotNet.Mvc.ViewModels.Profiles.PublicProfileViewModel<MyHome.Models.ProfessionalMetadata, MyHome.Models.ProfileReviewCriteria>

@{
    ViewBag.Title = string.Concat(Model.Profile.GetProfileName(), " - ", Model.Profile.IsProfessional ? Model.Profile.GetProfessionalAddressOneLine() : Localizer.Get("PublicProfile_MyHomeLabProfile"));
    if (Model.Profile.IsProfessional && !string.IsNullOrEmpty(Model.TypedMetadata.BusinessDescription))
    {
        ViewBag.MetaDescription = Model.TypedMetadata.BusinessDescription;
    }
    else
    {
        ViewBag.MetaDescription = Localizer.Get(string.Format("PublicProfile_User_MetaDescription", Model.Profile.GetProfileName()));
    }
    var photos = Model.Profile.Listings.Where(x => x.ListingType == "Photo");
    var reviews = Model.Profile.Reviews;
    var discussions = Model.Profile.Listings.Where(x => x.ListingType == "Discussion");
    var collections = Model.Profile.Collections.Where(x => x.Listings != null && x.Listings.Count() > 0 && x.Type == Classy.DotNet.Responses.CollectionType.PhotoBook);
    var projects = Model.Profile.Collections.Where(x => x.Listings != null && x.Listings.Count() > 0 && x.Type == Classy.DotNet.Responses.CollectionType.Project);
    var webphotos = Model.Profile.Collections.Where(x => x.Listings != null && x.Listings.Count() > 0 && x.Type == Classy.DotNet.Responses.CollectionType.WebPhotos);
    var user = User.Identity as Classy.DotNet.Security.ClassyIdentity;
    var proCategories = Localizer.GetList("professional-categories");
    var countries = Localizer.GetList("supported-countries");
}

@section ActionBar {
    @if (User.Identity.IsAuthenticated && Model.Profile.CanEdit())
    {
        <div class="profile-actions">
            <a href="@Url.RouteUrlForCurrentLocale("EditProfile", new { ProfileId = Model.Profile.Id })" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-pencil"></i> @Localizer.Get("Profile_EditProfile")</a>
            <div class="dropdown">
                  <a class="btn btn-primary btn-sm" data-toggle="dropdown">
                      <i class="fa fa-share"></i>&nbsp;@Localizer.Get("Profile_Share")&nbsp;<span class="caret"></span>
                  </a>
                  <ul class="dropdown-menu" role="menu">
                    <li><a tabindex="-1" class="email" href="#" onclick="Classy.SendEmail('@HttpUtility.HtmlEncode(Localizer.Get("Profile_Pro_MailLinkSubject"))', '@HttpUtility.HtmlEncode(string.Format(Localizer.Get("Profile_Pro_MailLinkBody"), string.Concat("https://www.homelab.com", Url.RouteUrl("PublicProfile", new { ProfileId = Model.Profile.Id }), "?utm_source=share_profile&utm-medium=email"), Model.Profile.GetProfileName()))', '@Localizer.Get("Profile_ShareViaEmailTitle")')">@Localizer.Get("Profile_ShareViaEmail")</a></li>
                    <li><a tabindex="-1" class="facebook" href="#" onclick="Classy.ShareUI('https://www.facebook.com/sharer/sharer.php?u=', document.location.href + '?utm_source=share_profile&utm-medium=facebook', 520, 350)">Facebook</a></li>
                    <li><a tabindex="-1" class="twitter" href="#" onclick="Classy.ShareUI('https://twitter.com/home?status=', document.location.href + '?utm_source=share_profile&utm-medium=twitter', 520, 350)">Twitter</a></li>
                    <li><a tabindex="-1" class="googleplus" href="#" onclick="Classy.ShareUI('https://plus.google.com/share?url=', document.location.href + '?utm_source=share_profile&utm-medium=gplus', 520, 350)">Google+</a></li>
                  </ul>
                </div> 
            @if (Model.Profile.IsProfessional)
            {
                <a href="@Url.RouteUrlForCurrentLocale("AskForReview")" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-comment"></i> @Localizer.Get("Profile_AskForReview")</a>
                <a href="#" data-toggle="modal" data-target="#select-cover-modal" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-picture"></i> @Localizer.Get("Profile_SelectCoverPhotos")</a>
            }
            else
            {
                <a onclick="Classy.SendEmail('@HttpUtility.HtmlEncode(Localizer.Get("Profile_MailLinkSubject"))', '@HttpUtility.HtmlEncode(string.Format(Localizer.Get("Profile_MailLinkBody"), string.Concat("https://www.homelab.com", Url.RouteUrl("PublicProfile", new { ProfileId = Model.Profile.Id })), Model.Profile.GetProfileName()))')" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-envelope"></i> @Localizer.Get("Profile_MailLink")</a>
                <a href="@Url.RouteUrl("CreateProfessionalProfile")" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-flash"></i> @Localizer.Get("PublicProfile_GoPro")</a>
            }
        </div>
    }
}

<div class="row">
    <div class="col-md-12">
        <div class="ajax-alert"></div>
        <div id="contactSuccess" class="alert alert-success alert-dismissable hidden">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
            @Localizer.Get("ContactPro_Success")
        </div>

        @if (TempData["ReviewSuccess"] != null)
        {
            @Html.Bootstrap().Alert(Localizer.Get("PublicProfile_ReviewSuccess")).Closeable().Style(AlertColor.Success)
        }

        @if (TempData["EditProfile_Successs"] != null)
        {
            @Html.Bootstrap().Alert(Localizer.Get("PublicProfile_EditProfileSuccess")).Closeable().Style(AlertColor.Success)
        }

        @if (Model.Profile.IsProfessional &&
            Request.IsAuthenticated && user.Profile.Id == Model.Profile.Id &&
            photos.Count() == 0)
        {
            <div class="alert alert-warning alert-dismissable">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                <h4>@Localizer.Get("PublicProfile_CallToAction_UploadPhotos_Title")</h4>
                <p>@Localizer.Get("PublicProfile_CallToAction_UploadPhotos")</p>
                <p><a href="@Url.RouteUrl("CreatePhoto", new { @ref = "public_profile_alert_cta" })" class="btn btn-warning">@Localizer.Get("PublicProfile_CallToAction_UploadPhotos_Button")</a></p>
            </div>
        }
        else if (Model.Profile.IsProfessional &&
          Request.IsAuthenticated && user.Profile.Id == Model.Profile.Id &&
          reviews.Count() == 0)
        {
            <div class="alert alert-warning alert-dismissable">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                <h4>@Localizer.Get("PublicProfile_CallToAction_GetReviews_Title")</h4>
                <p>@Localizer.Get("PublicProfile_CallToAction_GetReviews")</p>
                <p><a href="@Url.RouteUrl("AskForReview", new { @ref = "public_profile_alert_cta" })" class="btn btn-warning">@Localizer.Get("PublicProfile_CallToAction_GetReviews_Button")</a></p>
            </div>
        }

        @if (Model.Profile.IsProfessional &&
            Request.IsAuthenticated && user.Profile.Id == Model.Profile.Id &&
            photos.Any(x => !x.IsPublished))
        {
            <div class="alert alert-info alert-dismissable">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                <h4>@Localizer.Get("PublicProfile_CallToAction_EditPhotos_Title")</h4>
                <p>@Localizer.Get("PublicProfile_CallToAction_EditPhotos")</p>
                <p><a href="@Url.RouteUrl("ShowListingsByType")" class="btn btn-info">@Localizer.Get("PublicProfile_CallToAction_EditPhotos_Button")</a></p>
            </div>
        }
    </div>
</div>

<div class="row" @(Model.Profile.IsProfessional ? "itemscope itemtype=\"http://schema.org/LocalBusiness\"" : "")>
    <div class="profile-header col-md-9">
        <div class="media">
            <div class="pull-left">
                <img class="img-circle" src="@Model.Profile.AvatarUrl(80, true)" title="@Model.Profile.GetProfileName()" width="80" />
            </div>
            <div class="media-body">
                <div class="profile-title clearfix">
                    <h1 class="media-heading pull-left" itemprop="name">@Html.ProfileLink(Model.Profile) </h1>
                    @if (Model.Profile.IsProfessional)
                    { <small class="pull-left"><span class="label label-default">PRO</span></small> }
                </div>

                @if (Model.Profile.IsProfessional)
                {
                    var hasReviews = Model.Profile.ReviewCount > 0;
                    
                    <div class="rating" @(hasReviews ? "itemprop=\"aggregateRating\" itemscope itemtype=\"http://schema.org/AggregateRating\"" : string.Empty)>
                    @if (hasReviews)
                    {
                        <span class="stars">
                            @for (var i = 1; i <= Convert.ToInt16(Math.Round(Model.Profile.ReviewAverageScore, 0)); i++)
                            {
                                <span class="glyphicon glyphicon-star"></span>
                            }
                            @for (var i = 1; i <= 5 - Convert.ToInt16(Math.Round(Model.Profile.ReviewAverageScore, 0)); i++)
                            {
                                <span class="glyphicon glyphicon-star-empty"></span>
                            }
                        </span>
                        <span class="hide" itemprop="ratingValue">@Model.Profile.ReviewAverageScore</span>
                        <small><a href="#"><span itemprop="reviewCount">@Model.Profile.ReviewCount</span> @Localizer.Get("Profile_Main_Reviews")</a> |</small>
                    }
                    <small><a href="/profile/@Model.Profile.Id/reviews/new">@Localizer.Get("Profile_Main_ReviewMe") &raquo;</a></small>

                    @if (hasReviews && Model.ReviewSubCriteria != null)
                    {
                        <div class="details hide">
                            <dl class="dl-horizontal">
                                <dt>@Localizer.Get("Profile_ReviewDetails_Availability")</dt>
                                <dd>
                                    @for (var i = 1; i <= Convert.ToInt16(Math.Round(Model.ReviewSubCriteria.Availability, 0)); i++)
                                    {
                                        <span class="glyphicon glyphicon-star"></span>
                                    }
                                    @for (var i = 1; i <= 5 - Convert.ToInt16(Math.Round(Model.ReviewSubCriteria.Availability, 0)); i++)
                                    {
                                        <span class="glyphicon glyphicon-star-empty"></span>
                                    }
                                </dd>
                                <dt>@Localizer.Get("Profile_ReviewDetails_Professionalism")</dt>
                                <dd>
                                    @for (var i = 1; i <= Convert.ToInt16(Math.Round(Model.ReviewSubCriteria.Professionalism, 0)); i++)
                                    {
                                        <span class="glyphicon glyphicon-star"></span>
                                    }
                                    @for (var i = 1; i <= 5 - Convert.ToInt16(Math.Round(Model.ReviewSubCriteria.Professionalism, 0)); i++)
                                    {
                                        <span class="glyphicon glyphicon-star-empty"></span>
                                    }
                                </dd>
                                <dt>@Localizer.Get("Profile_ReviewDetails_Creativity")</dt>
                                <dd>
                                    @for (var i = 1; i <= Convert.ToInt16(Math.Round(Model.ReviewSubCriteria.Creativity, 0)); i++)
                                    {
                                        <span class="glyphicon glyphicon-star"></span>
                                    }
                                    @for (var i = 1; i <= 5 - Convert.ToInt16(Math.Round(Model.ReviewSubCriteria.Creativity, 0)); i++)
                                    {
                                        <span class="glyphicon glyphicon-star-empty"></span>
                                    }
                                </dd>
                                <dt>@Localizer.Get("Profile_ReviewDetails_ServiceLevel")</dt>
                                <dd>
                                    @for (var i = 1; i <= Convert.ToInt16(Math.Round(Model.ReviewSubCriteria.ServiceLevel, 0)); i++)
                                    {
                                        <span class="glyphicon glyphicon-star"></span>
                                    }
                                    @for (var i = 1; i <= 5 - Convert.ToInt16(Math.Round(Model.ReviewSubCriteria.ServiceLevel, 0)); i++)
                                    {
                                        <span class="glyphicon glyphicon-star-empty"></span>
                                    }
                                </dd>
                            </dl>
                        </div>
                    }
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="col-md-3 text-right">
        <div class="social-stats">
            <ul class="list-inline list-unstyled">
                <li class="text-left">
                    <div><strong>@Model.Profile.FollowerCount</strong></div>
                    <div>@Localizer.Get("PublicProfile_Followers")</div>
                </li>
                <li class="text-left">
                    <div><strong>@Model.Profile.FollowingCount</strong></div>
                    <div>@Localizer.Get("PublicProfile_Following")</div>
                </li>
                <li class="text-left">
                    @{ 
                        var following = Request.IsAuthenticated &&
                            (Model.Profile.FollowedBy.Any(x => x.Id == (User.Identity as Classy.DotNet.Security.ClassyIdentity).Profile.Id) ||
                            Model.Profile.Id == (User.Identity as Classy.DotNet.Security.ClassyIdentity).Profile.Id);
                    }
                    @Html.TriggerProfileActionLink(string.Concat("<i class=\"glyphicon glyphicon-minus-sign\"></i> ", Localizer.Get("Profile_Sidebar_Unfollow")), "unfollow", Model.Profile, string.Concat("btn btn-default ", following ? "" : "hidden"))
                    @Html.TriggerProfileActionLink(string.Concat("<i class=\"glyphicon glyphicon-plus-sign\"></i> ", Localizer.Get("Profile_Sidebar_Follow")), "follow", Model.Profile, string.Concat("btn btn-primary ", following ? "hidden" : ""))
                </li>
            </ul>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-9">
        @if (Model.Profile.IsProfessional)
        {
            <div>
                @if (!string.IsNullOrEmpty(Model.TypedMetadata.ServicesProvided))
                {
                    <p>
                        <strong>@Localizer.Get("Profile_ServicesProvided")</strong>
                        <br />
                        @Model.TypedMetadata.ServicesProvided
                    </p>
                }
                @if (!string.IsNullOrEmpty(Model.TypedMetadata.AreasServed))
                {
                    <p>
                        <strong>@Localizer.Get("Profile_AreasServed")</strong>
                        <br />
                        @Model.TypedMetadata.AreasServed
                    </p>
                }
                @if (!string.IsNullOrEmpty(Model.TypedMetadata.BusinessDescription))
                {
                    <p>
                        <strong>@Localizer.Get("Profile_BusinessDescription")</strong>
                        <br />
                        <span class="description" itemprop="description">@Model.TypedMetadata.BusinessDescription</span>
                    </p>
                }
            </div>
        }

                <!-- tabs -->
                <ul class="nav nav-tabs" id="profileTabs">
                    @if (Model.Profile.IsProfessional)
                    {
                        <li class="@(projects.Count() > 0 ? "active" : "")"><a href="#projects" data-toggle="tab">@Localizer.Get("Profile_Tabs_Projects")</a></li>
                        <li class="@(projects.Count() == 0 ? "active" : "")"><a href="#webphotos" data-toggle="tab">@Localizer.Get("Profile_Tabs_WebPhotos")</a></li>
                    }
                    <li class="@(Model.Profile.IsProfessional ? "" : "active")"><a href="#collections" data-toggle="tab">@Localizer.Get("Profile_Tabs_Collections")</a></li>
                    <li><a href="#activity" data-toggle="tab">@Localizer.Get("Profile_Tabs_Activity")</a></li>                        
                </ul>

                <div class="tab-content">
                    @if (Model.Profile.IsProfessional)
                    {
                        <div class="row tab-pane @(projects.Count() > 0 ? "active" : "")" id="projects">
                            @if (projects.Count() > 0)
                            {
                                foreach (var p in projects)
                                {
                                    <div class="col-md-4">
                                        <div class="photo thumbnail">
                                            <a href="@Url.RouteUrlForCurrentLocale("CollectionDetails", new { collectionId = p.Id, view = "grid" })">
                                                @Html.Partial("Thumbnails", p.CoverPhotos)
                                                <div class="details">
                                                    <ul class="stats list-inline list-unstyled">
                                                        <li><span><i class="glyphicon glyphicon-eye-open"></i> @p.ViewCount</span></li>
                                                        <li><span><i class="glyphicon glyphicon-heart-empty"></i> @p.FavoriteCount</span></li>
                                                        <li><span><i class="glyphicon glyphicon-comment"></i> @p.CommentCount</span></li>
                                                    </ul>

                                                    <strong>@p.Title</strong>
                                                </div>
                                            </a>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                        <div class="row tab-pane @(projects.Count() == 0 ? "active" : "")" id="webphotos">
                            <div class="col-md-12">
                                @Html.Raw(Localizer.Get("PublicProfile_WhatAreWebPhotos"))
                            </div>
                            @if (webphotos.Count() > 0)
                            {
                                foreach (var p in webphotos)
                                {
                                    <div class="col-md-4">
                                        <div class="photo thumbnail">
                                            <a href="@Url.RouteUrlForCurrentLocale("CollectionDetails", new { collectionId = p.Id, view = "grid" })">
                                                @Html.Partial("Thumbnails", p.CoverPhotos)
                                                <div class="details">
                                                    <ul class="stats list-inline list-unstyled">
                                                        <li><span><i class="glyphicon glyphicon-eye-open"></i> @p.ViewCount</span></li>
                                                        <li><span><i class="glyphicon glyphicon-heart-empty"></i> @p.FavoriteCount</span></li>
                                                        <li><span><i class="glyphicon glyphicon-comment"></i> @p.CommentCount</span></li>
                                                    </ul>
                                                </div>
                                            </a>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    } 

                    <div class="row tab-pane @(Model.Profile.IsProfessional ? "" : "active")" id="collections">
                        @if (collections.Count() > 0)
                        {
                            foreach (var c in collections)
                            {
                                <div class="col-md-4">
                                    <div class="photo thumbnail">
                                        <a href="@Url.RouteUrlForCurrentLocale("CollectionDetails", new { collectionId = c.Id, view = "grid" })">
                                            @Html.Partial("Thumbnails", c.CoverPhotos)
                                            <div class="details">
                                                <ul class="stats list-inline list-unstyled">
                                                    <li><span><i class="glyphicon glyphicon-eye-open"></i> @c.ViewCount</span></li>
                                                    <li><span><i class="glyphicon glyphicon-heart-empty"></i> @c.FavoriteCount</span></li>
                                                    <li><span><i class="glyphicon glyphicon-comment"></i> @c.CommentCount</span></li>
                                                </ul>

                                                <strong>@c.Title</strong>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                            }
                        }
                    </div>

                    <div class="row tab-pane" id="activity">
                    </div>
                </div>
            </div>
    <div class="col-md-3">
        @if (Model.Profile.IsProfessional)
        {
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">@Localizer.Get("PublicProfile_ContactInfo")</h3>
                </div>
                <div class="panel-body">
                    <div class="contact-button">
                        @if (Model.Profile.IsProxy)
                        {
                            if (!Request.IsAuthenticated || !user.Profile.IsProfessional)
                            {
                            @Html.RouteLink(@Localizer.Get("Profile_Main_Claim"), new { controller = "Profile", action = "ClaimProxyProfile", profileId = Model.Profile.Id }, new { @class = "btn btn-warning btn-block" })
                            }
                        }
                        else
                        {
                            <a id="contact-pro" href="#" class="btn btn-primary btn-block">@Localizer.Get("Profile_Main_ContactPro")</a>
                        }
                    </div>

                    @if (!string.IsNullOrEmpty(Model.Profile.ProfessionalInfo.CompanyContactInfo.Phone))
                    {
                        <div class="contact-info"><i class="glyphicon glyphicon-earphone"></i>&nbsp;&nbsp;<span itemprop="telephone">@Model.Profile.ProfessionalInfo.CompanyContactInfo.Phone</span></div>
                    }

                    @if (!string.IsNullOrEmpty(Model.Profile.ProfessionalInfo.CompanyContactInfo.WebsiteUrl))
                    {
                        <div class="contact-info"><i class="glyphicon glyphicon-globe"></i>&nbsp;&nbsp;<a itemprop="url" href="@Model.Profile.ProfessionalInfo.CompanyContactInfo.WebsiteUrl.ToValidUrl()" target="_blank" rel="nofollow">@Localizer.Get("PublicProfile_VisitWebsite")</a></div>
                    }

                    @if (!string.IsNullOrEmpty(Model.Profile.ProfessionalInfo.Category))
                    {
                        <div class="contact-info">
                            <i class="glyphicon glyphicon-tag"></i>&nbsp;&nbsp;<span><a href="@Url.RouteUrlForCurrentLocale("SearchProfiles", new { filters = new Classy.DotNet.Mvc.ViewModels.Profiles.SearchProfileViewModel<MyHome.Models.ProfessionalMetadata> { Category = Model.Profile.ProfessionalInfo.Category }.ToSlug() })">@proCategories.Single(x => x.Value == Model.Profile.ProfessionalInfo.Category).Text</a></span>
                        </div>
                    }

                    @if (Model.Profile.ProfessionalInfo.CompanyContactInfo != null &&
                                    Model.Profile.ProfessionalInfo.CompanyContactInfo.Location != null &&
                                    Model.Profile.ProfessionalInfo.CompanyContactInfo.Location.Address != null)
                    {
                        <div class="contact-info" itemprop="address" itemscope itemtype="http://schema.org/PostalAddress">
                            <i class="glyphicon glyphicon-map-marker"></i>&nbsp;&nbsp;<span itemprop="streetAddress">@Model.Profile.ProfessionalInfo.CompanyContactInfo.Location.Address.Street1</span><br />
                            <span class="address2">
                                <span>@Model.Profile.ProfessionalInfo.CompanyContactInfo.Location.Address.PostalCode,</span>&nbsp;
                                @if (!string.IsNullOrEmpty(Model.Profile.ProfessionalInfo.CompanyContactInfo.Location.Address.City))
                                {
                                    <span itemprop="addressLocality">@Html.RouteLinkForCurrentLocale(Model.Profile.ProfessionalInfo.CompanyContactInfo.Location.Address.City, "SearchProfiles", new { filters = new Classy.DotNet.Mvc.ViewModels.Profiles.SearchProfileViewModel<MyHome.Models.ProfessionalMetadata> { Country = Model.Profile.ProfessionalInfo.CompanyContactInfo.Location.Address.Country, City = Model.Profile.ProfessionalInfo.CompanyContactInfo.Location.Address.City }.ToSlug() })</span>@:&nbsp;
                                }
                                <span>@Html.RouteLinkForCurrentLocale(countries.Single(x => x.Value == Model.Profile.ProfessionalInfo.CompanyContactInfo.Location.Address.Country).Text, "SearchProfiles", new { filters = new Classy.DotNet.Mvc.ViewModels.Profiles.SearchProfileViewModel<MyHome.Models.ProfessionalMetadata> { Country = Model.Profile.ProfessionalInfo.CompanyContactInfo.Location.Address.Country }.ToSlug() })</span>
                            </span>
                        </div>
                    }
                </div>
            </div>
                        
                    if (reviews.Count() > 0)
                    {
            <div id="reviews" class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">@Model.Profile.ReviewCount @Localizer.Get("Profile_Tabs_Reviews")</h3>
                </div>
                <div class="panel-body">

                    @foreach (var r in reviews)
                    {
                        <div class="review">
                            <div class="by">
                                @Localizer.Get("PublicProfile_ReviewBy") @Html.RouteLinkForCurrentLocale(r.ReviewerUsername, "PublicProfile", new { ProfileId = r.ProfileId })
                            </div>
                            <div class="rating">
                                <span class="stars">
                                    @for (var i = 1; i <= Convert.ToInt16(Math.Round(Model.Profile.ReviewAverageScore, 0)); i++)
                                    {
                                        <span class="glyphicon glyphicon-star"></span>
                                    }
                                    @for (var i = 1; i <= 5 - Convert.ToInt16(Math.Round(Model.Profile.ReviewAverageScore, 0)); i++)
                                    {
                                        <span class="glyphicon glyphicon-star-empty"></span>
                                    }
                                </span>
                            </div>
                            <div class="content">
                                <blockquote>@r.Content</blockquote>
                            </div>
                        </div>
                    }

                </div>
            </div>
                    }
        }
    </div>
</div>

<div class="modal fade" id="contact-pro-modal" data-remote="@Url.RouteUrl("ContactProfessional", new { ProfessionalProfileId = Model.Profile.Id })">
    <div class="modal-dialog">
        <div class="modal-content" id="contact-pro-replace">
        </div>
    </div>
</div>

<div class="modal fade" id="select-cover-modal" data-backdrop="static" data-remote="@Url.RouteUrl("SelectCoverPhotos", new { profileId = Model.Profile.Id })">
    <div class="modal-dialog">
        <div class="modal-content" id="select-cover-replace">
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(function () {
            $('#contact-pro').click(function () {
                $('#contact-pro-modal').modal({ 'keyboard': true });
            });

            $('.rating .stars').click(function () {
                $('.rating .details').removeClass('hide');
            });
        });
    </script>

}
