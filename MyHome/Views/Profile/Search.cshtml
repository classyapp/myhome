@model Classy.DotNet.Mvc.ViewModels.Profiles.SearchViewModel<MyHome.Models.ProfessionalMetadata>

@{
    ViewBag.Title = "SearchProfiles";
    var categories = Localizer.GetList("professional-categories");
}

<div class="row">
    <div class="sidebar col-md-2">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">@Localizer.Get("SearchProfiles_Title_Results")</h3>
            </div>
            <div class="panel-body" itemscope itemtype="http://data-vocabulary.org/Breadcrumb">
                @if (!string.IsNullOrEmpty(Model.Category))
                {
                    <span class="label label-default">
                        <a itemscope itemprop="url" href="@Url.RouteUrlForCurrentLocale("SearchProfiles", new { category = Model.Category })">@categories.Single(x => x.Value == Model.Category).Text</a>
                        <a class="dismiss" href="@Url.RouteUrlForCurrentLocale("SearchProfiles", new { })">x</a>
                    </span>
                }
                <br />
                @if (Model.Location != null)
                {
                    <span class="tag">
                        <a itemscope itemprop="url" href="@Url.RouteUrlForCurrentLocale("SearchProfiles", new { category = Model.Category, location = Model.Location })">@Model.Location</a>
                        <a class="dismiss" href="@Url.RouteUrlForCurrentLocale("SearchProfiles", new { category = Model.Category })">x</a>
                    </span>
                }
                </div>
            </div>

        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">@Localizer.Get("SearchProfiles_Sidebar_Categories")</h3>
            </div>
            <div class="panel-body panel-links">
                @foreach(var c in categories)
                {
                    @Html.RouteLinkForCurrentLocale(c.Text, "SearchProfiles", new { category = c.Value })
                }
            </div>
        </div>
    </div>

    <div class="main col-md-10">
        <h1>
        @if (Model.Location != null && Model.Category != null) {
            <text>
            @string.Format(Localizer.Get("SearchProfiles_Results_Title_CategoryAndLocation"), Model.Results.Count, categories.Single(x => x.Value == Model.Category).Text, Model.Location)
            </text>
        }
        else if (Model.Category != null)
        {
            <text>
            @string.Format(Localizer.Get("SearchProfiles_Results_Title_CategoryOnly"), Model.Results.Count, categories.Single(x => x.Value == Model.Category).Text)
            </text>
        }
        else if (Model.Location != null)
        {
            <text>
                @string.Format(Localizer.Get("SearchProfiles_Results_Title_LocationOnly"), Model.Results.Count, Model.Location)
            </text>
        }
        </h1>

        <hr/>

        <div class="search-form">
            @using (var f = Html.Bootstrap().Begin(new Form("Search", "Profile").Type(FormType.Inline).FormMethod(FormMethod.Post)))
            {
                @f.FormGroup().TextBoxFor(x => x.Name).Placeholder(Localizer.Get("SearchProfiles_Label_Name")).Label().Class("sr-only")
                @f.FormGroup().TextBoxFor(x => x.Location).Placeholder(Localizer.Get("SearchProfiles_Label_City")).Label().Class("sr-only")
                @f.FormGroup().DropDownListFor(x => x.Category, categories).OptionLabel(Localizer.Get("SearchProfiles_Label_CategoryDefaultOption")).Label().Class("sr-only")

                @Html.Bootstrap().SubmitButton().Text(Localizer.Get("SearchProfiles_Label_Submit")).Class("btn-success")
            }
        </div>

        @if (Model.Results != null)
        {
            <div class="row results">
            @foreach (var p in Model.Results)
            {
                <div class="col-md-12">
                    <div class="profile">
                        <div class="pull-left">
                            @if (p.Listings != null && p.Listings.Count() > 0)
                            {
                                var thumb = p.Listings[0].ExternalMedia[0].Thumbnails.SingleOrDefault(x => x.Width == 266);
                                <img src="@thumb.Url" width="200" />
                            }
                            else
                            {
                                <img src="no-photos" width="200" />
                            }
                        </div>
                        <div class="details">
                            <div class="pull-left">
                                <img src="@p.ThumbnailUrl" width="40" />
                            </div>
                            <h4>@Html.ProfileLink(p)</h4>
                            <div>
                                @if (p.ReviewCount > 0) {
                                    <span class="stars">
                                        @for (var i = 1; i <= Convert.ToInt16(Math.Round(p.ReviewAverageScore, 0)); i++)
                                        {
                                            <span class="glyphicon glyphicon-star"></span>
                                        }
                                        @for (var i = 1; i <= 5 - Convert.ToInt16(Math.Round(p.ReviewAverageScore, 0)); i++)
                                        {
                                            <span class="glyphicon glyphicon-star-empty"></span>
                                        }
                                    </span>
                                }
                                else
                                { 
                                    <span class="stars">&nbsp;</span> 
                                }
                            </div>
                            <hr />
                            <div>
                                @if (p.ProfessionalInfo.CompanyContactInfo != null &&
                                    p.ProfessionalInfo.CompanyContactInfo.Location != null &&
                                    p.ProfessionalInfo.CompanyContactInfo.Location.Address != null)
                                {
                                    <div class="contact-info">
                                        <span>@p.ProfessionalInfo.CompanyContactInfo.Location.Address.City</span>, @p.ProfessionalInfo.CompanyContactInfo.Location.Address.Country
                                    </div>
                                }
                            </div>
                            <hr />
                            <div>
                                @if (p.Metadata.ContainsKey("BusinessDescription"))
                                {
                                    <p>
                                        @p.Metadata["BusinessDescription"]
                                    </p>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                
            }
            </div>
        }
    </div>
</div>
