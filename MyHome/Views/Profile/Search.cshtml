@model Classy.DotNet.Mvc.ViewModels.Profiles.SearchProfileViewModel<MyHome.Models.ProfessionalMetadata>

@{
    ViewBag.Title = "SearchProfiles";
    var categories = Localizer.GetList("professional-categories");
    var countries = Localizer.GetList("supported-countries");
}

<div class="row">
    <div class="sidebar col-md-3">
        <div class="panel panel-default panel-first">
            <div class="panel-heading">
                <h3 class="panel-title">@Localizer.Get("SearchProfiles_Sidebar_Categories")</h3>
            </div>
            <div class="panel-body panel-links">
                @foreach (var c in categories)
                {
                    @Html.RouteLinkForCurrentLocale(c.Text, "SearchProfiles", new { category = c.Value })
                }
            </div>
        </div>
    </div>

    <div class="main col-md-9">
        @if (Model.Category != null)
        {
            <h1>@categories.Single(x => x.Value == Model.Category).Text</h1>
        }
        else
        {
            <h1>@Localizer.Get("ProfileSearch_ResultsHeader_AllPros")</h1>
        }

        <div class="label-container" itemscope itemtype="http://data-vocabulary.org/Breadcrumb">
            @if (string.IsNullOrEmpty(Model.Location))
            {
                <span class="label label-danger hidden">
                    <a itemprop="url" href="@Url.RouteUrlForCurrentLocale("SearchProfiles")">@Localizer.Get("ProfileSearch_AllProfessionals")</a>
                    <a class="dismiss" href="@Url.RouteUrlForCurrentLocale("SearchProfiles", new { })">x</a>
                </span>
            }
            @if (!string.IsNullOrEmpty(Model.Category))
            {
                <span class="label label-danger">
                    <a itemprop="@(string.IsNullOrEmpty(Model.Location) ? "child" : "url")" href="@Url.RouteUrlForCurrentLocale("SearchProfiles", new { category = Model.Category })">@categories.Single(x => x.Value == Model.Category).Text</a>
                    <a class="dismiss" href="@Url.RouteUrlForCurrentLocale("SearchProfiles", new { })">x</a>
                </span>
            }
            @if (!string.IsNullOrEmpty(Model.Location))
            {
                <span class="label label-danger">
                    <a itemprop="child" href="@Url.RouteUrlForCurrentLocale("SearchProfiles", new { category = Model.Category, location = Model.Location })">@countries.Single(x => x.Value == Model.Location).Text</a>
                    <a class="dismiss" href="@Url.RouteUrlForCurrentLocale("SearchProfiles", new { category = Model.Category })">x</a>
                </span>
            }
        </div>

        <hr />

        <div class="search-form">
            @using (var f = Html.Bootstrap().Begin(new Form("Search", "Profile").Type(FormType.Inline).FormMethod(FormMethod.Post)))
            {
                @f.FormGroup().TextBoxFor(x => x.Name).Placeholder(Localizer.Get("SearchProfiles_Label_Name")).ShowValidationMessage(false).Label().Class("sr-only")
                @f.FormGroup().DropDownListFor(x => x.Location, countries.AsSelectList()).ShowValidationMessage(false).Label().Class("sr-only")
                @f.FormGroup().DropDownListFor(x => x.Category, categories.AsSelectList()).OptionLabel(Localizer.Get("SearchProfiles_Label_CategoryDefaultOption")).ShowValidationMessage(false).Label().Class("sr-only")
                @Html.TextBoxFor(x => x.Latitude, new { @class = "hidden" })
                @Html.TextBoxFor(x => x.Longitude, new { @class = "hidden" })

                @Html.Bootstrap().SubmitButton().Text(Localizer.Get("SearchProfiles_Label_Submit")).Style(ButtonStyle.Primary)
            }
        </div>

        <div class="row results iscroll" data-item-class=".profile" data-hasMore="@(Model.Results.Count == Classy.DotNet.Responses.AppView.PageSize ? "true" : "false")"
            data-url="@Url.RouteUrlForCurrentLocale("SearchProfiles")"
            data-page-size="@Classy.DotNet.Responses.AppView.PageSize" 
            data-page="@(string.IsNullOrEmpty(Request["page"]) ? 1 : int.Parse(Request["page"]))">
            @if (Model.Results != null)
            {
                @Html.Partial("ProfileGrid", Model.Results)
            }
        </div>
        <div class="clearfix text-center hidden" id="iscrollLoading"><img src="~/img/ajax-loader.gif" /></div>
        <div id="pager" class="text-center hide">
            <ul class="pagination" data-total="@((int)Math.Ceiling((decimal)Model.Count / Classy.DotNet.Responses.AppView.PageSize))"
                data-pages="@Classy.DotNet.Responses.AppView.PagesCount">
                <li><a href="#">@Localizer.Get("Paging_Prev")</a></li>
                @for (int i = 0; i < Classy.DotNet.Responses.AppView.PagesCount; i++)
                {
                    <li><a href="#">@(i + 1)</a></li>
                }
                <li><a href="#">@Localizer.Get("Paging_Next")</a></li>
            </ul>
        </div>
    </div>
</div>

@section scripts {
    <script src="~/Scripts/iscroll.js"></script>
    <script>
        resetPagination(@(string.IsNullOrEmpty(Request["page"]) ? 1 : int.Parse(Request["page"])));
        $(document).on("classy.gps.available", function (e, data) {
            if (data.Available) {
                $("#Location").prepend("<option value=\"current-location\">" + Classy.Strings.NearMe + "</option>");
                $("#Latitude").val(data.Latitude);
                $("#Longitude").val(data.Longitude);
                $("#Location").val(Classy.ParseQueryString().location || Classy.GetCookie(Classy.Env.CountryCookieName) || $("#Location_Address_Country").val());
            } else {
                $("#Latitude").val("");
                $("#Longitude").val("");
            }
        });
    </script>
}