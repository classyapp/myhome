@model Classy.DotNet.Mvc.ViewModels.Profiles.SearchViewModel<MyHome.Models.ProfessionalMetadata>

@{
    ViewBag.Title = "SearchProfiles";
    var categories = Localizer.GetList("professional-categories");
}

<div class="row">
    <div class="sidebar col-md-2">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">@Localizer.Get("SearchProfiles_Title_Results")</h3>
            </div>
            <div class="panel-body" itemscope itemtype="http://data-vocabulary.org/Breadcrumb">
                @if (!string.IsNullOrEmpty(Model.Category))
                {
                    <span class="label label-default">
                        <a itemscope itemprop="url" href="@Url.RouteUrlForCurrentLocale("SearchProfiles", new { category = Model.Category })">@categories.Single(x => x.Value == Model.Category).Text</a>
                        <a class="dismiss" href="@Url.RouteUrlForCurrentLocale("SearchProfiles", new { })">x</a>
                    </span>
                }
                <br />
                @if (Model.Location != null)
                {
                    <span class="tag">
                        <a itemscope itemprop="url" href="@Url.RouteUrlForCurrentLocale("SearchProfiles", new { category = Model.Category, location = Model.Location })">@Model.Location</a>
                        <a class="dismiss" href="@Url.RouteUrlForCurrentLocale("SearchProfiles", new { category = Model.Category })">x</a>
                    </span>
                }
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">@Localizer.Get("SearchProfiles_Sidebar_Categories")</h3>
            </div>
            <div class="panel-body panel-links">
                @foreach (var c in categories)
                {
                    @Html.RouteLinkForCurrentLocale(c.Text, "SearchProfiles", new { category = c.Value })
                }
            </div>
        </div>
    </div>

    <div class="main col-md-10">
        <h1>
            @if (Model.Location != null && Model.Category != null)
            {
                <text>
                @string.Format(Localizer.Get("SearchProfiles_Results_Title_CategoryAndLocation"), Model.Results.Count, categories.Single(x => x.Value == Model.Category).Text, Model.Location)
                </text>
            }
            else if (Model.Category != null)
            {
                <text>
                @string.Format(Localizer.Get("SearchProfiles_Results_Title_CategoryOnly"), Model.Results.Count, categories.Single(x => x.Value == Model.Category).Text)
                </text>
            }
            else if (Model.Location != null)
            {
                <text>
                @string.Format(Localizer.Get("SearchProfiles_Results_Title_LocationOnly"), Model.Results.Count, Model.Location)
                </text>
            }
        </h1>

        <hr />

        <div class="search-form">
            @using (var f = Html.Bootstrap().Begin(new Form("Search", "Profile").Type(FormType.Inline).FormMethod(FormMethod.Post)))
            {
                @f.FormGroup().TextBoxFor(x => x.Name).Placeholder(Localizer.Get("SearchProfiles_Label_Name")).Label().Class("sr-only")
                @f.FormGroup().TextBoxFor(x => x.Location).Placeholder(Localizer.Get("SearchProfiles_Label_City")).Label().Class("sr-only")
                @f.FormGroup().DropDownListFor(x => x.Category, categories).OptionLabel(Localizer.Get("SearchProfiles_Label_CategoryDefaultOption")).Label().Class("sr-only")

                @Html.Bootstrap().SubmitButton().Text(Localizer.Get("SearchProfiles_Label_Submit")).Class("btn-success")
            }
        </div>

        <div class="row results iscroll" data-item-class=".profile" data-hasMore="true" data-url="@Url.RouteUrlForCurrentLocale("SearchProfiles")"
            data-page-size="@Classy.DotNet.Mvc.ViewModels.Application.AppView.PageSize" data-page="@(string.IsNullOrEmpty(Request["page"]) ? 1 : int.Parse(Request["page"]))">
            @if (Model.Results != null)
            {
                @Html.Partial("ProfileGrid", Model.Results)
            }
        </div>
        <div id="pager" class="text-center">
            <ul class="pagination" data-total="@(Model.Count / Classy.DotNet.Mvc.ViewModels.Application.AppView.PageSize)" data-pages="@Classy.DotNet.Mvc.ViewModels.Application.AppView.PagesCount">
                <li><a href="#">@Localizer.Get("Paging_Prev")</a></li>
                @for (int i = 0; i < Classy.DotNet.Mvc.ViewModels.Application.AppView.PagesCount; i++)
                {
                    <li><a href="#">@(i + 1)</a></li>
                }
                <li><a href="#">@Localizer.Get("Paging_Next")</a></li>
            </ul>
        </div>
    </div>
</div>

@section scripts {
    <script src="~/Scripts/iscroll.js"></script>
    <script>
        resetPagination(@(string.IsNullOrEmpty(Request["page"]) ? 1 : int.Parse(Request["page"])));
    </script>
}