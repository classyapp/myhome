
@{
    ViewBag.Title = Localizer.Get("FindProForReview_PageTitle");
    ViewBag.NoIndex = true;
}

<div class="row">
    <div class="col-md-8 col-md-offset-2">
        <h1>@Localizer.Get("FindProForReview_PageTitle")</h1>
        <hr/>

        <div class="steps">
            <ul class="list-inline list-unstyled">
                <li>
                    <span class="visual"><i class="glyphicon glyphicon-search"></i></span>
                    <span class="verbal"><strong>1.</strong> @Localizer.Get("FindProForReview_Step1")</span>
                    <div class="search">
                        @Html.Bootstrap().TextBox("ProName").Class("typeahead").Placeholder(Localizer.Get("FindProForReview_Placeholder"))
                    </div>
                </li>
                <li>
                    <span class="visual"><i class="glyphicon glyphicon-comment"></i></span>
                    <span class="verbal"><strong>2.</strong> @Localizer.Get("FindProForReview_Step2")</span>
                    <div class="selection">
                        <a id="reviewLink" href="@(Url.RouteUrlForCurrentLocale("PostProfileReview", new { ProfileId = "__profileId__" }))" class="hide btn btn-primary">@Localizer.Get("FindProToReview_ReviewLink") <span class="name"></span></a>
                    </div>
                </li>
            </ul>
        </div>
    </div>
</div>



@section scripts {

    @Scripts.Render("~/scripts/hogan-2.0.0.js")
    @Scripts.Render("~/scripts/typeahead.min.js")

    <script>
        var proSuggestions = new Bloodhound({
            name: 'profile-suggestions',
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('Value'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            prefetch: '',
            remote: '//' + window.location.host + '/profile/search?professionalsonly=true&format=json&name=%QUERY'
        });
        proSuggestions.initialize();

        $('#ProName').typeahead({
            minLength: 2,
            highlight: true,
            hint: true
        },
        {
            name: 'profile-names',
            displayKey: function (profile) { return profile.ProfessionalInfo.CompanyName; },
            source: proSuggestions.ttAdapter(),
            templates: {
                suggestion: function(profile) {
                    return '<p>' + profile.ProfessionalInfo.CompanyName + '</p><p><small>' + profile.ProfessionalInfo.CompanyContactInfo.Location.City + ', ' + profile.ProfessionalInfo.CompanyContactInfo.Location.Country + '</small></p>';
                }
            }
        }).on('typeahead:selected', function (e, item) {
            $('#reviewLink')
                .attr('href', $('#reviewLink').attr('href').replace('__profileId__', item.Id))
                .removeClass('hide')
                .children('.name')
                .html(item.name);
        });
    </script>
}

