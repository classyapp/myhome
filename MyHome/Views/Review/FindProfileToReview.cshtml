
@{
    ViewBag.Title = "FindProfileToReview";
}

<style>
    .twitter-typeahead .tt-query,
    .twitter-typeahead .tt-hint {
        margin-bottom: 0;
    }

    .tt-dropdown-menu {
        min-width: 160px;
        margin-top: 2px;
        padding: 5px 0;
        background-color: #fff;
        border: 1px solid #ccc;
        border: 1px solid rgba(0,0,0,.2);
        *border-right-width: 2px;
        *border-bottom-width: 2px;
        -webkit-border-radius: 6px;
        -moz-border-radius: 6px;
        border-radius: 6px;
        -webkit-box-shadow: 0 5px 10px rgba(0,0,0,.2);
        -moz-box-shadow: 0 5px 10px rgba(0,0,0,.2);
        box-shadow: 0 5px 10px rgba(0,0,0,.2);
        -webkit-background-clip: padding-box;
        -moz-background-clip: padding;
        background-clip: padding-box;
    }

    .tt-suggestion {
        display: block;
        padding: 3px 20px;
    }

        .tt-suggestion.tt-is-under-cursor {
            color: #fff;
            background-color: #0081c2;
            background-image: -moz-linear-gradient(top, #47a447, #63c663);
            background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#47a447), to(#63c663));
            background-image: -webkit-linear-gradient(top, #47a447, #63c663);
            background-image: -o-linear-gradient(top, #47a447, #63c663);
            background-image: linear-gradient(to bottom, #47a447, #63c663);
            background-repeat: repeat-x;
            filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#47a447', endColorstr='#63c663', GradientType=0);
        }

    .twitter-typeahead .tt-hint {
        display: block;
        height: 34px;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.428571429;
        border: 1px solid transparent;
        border-radius: 4px;
    }

    .twitter-typeahead .hint-small {
        height: 30px;
        padding: 5px 10px;
        font-size: 12px;
        border-radius: 3px;
        line-height: 1.5;
    }

    .twitter-typeahead .hint-large {
        height: 45px;
        padding: 10px 16px;
        font-size: 18px;
        border-radius: 6px;
        line-height: 1.33;
    }

    .tt-suggestion.tt-is-under-cursor a {
        color: #fff;
    }

    .tt-suggestion p {
        margin: 0;
    }

    .twitter-typeahead {
        width: 100%;
    }

    .tt-dropdown-menu {
        width: 100%;
    }

    .tt-hint {
        width: 100%;
    }

    span.error {
        color: red;
    }
</style>

<div class="row">
    <div class="col-md-8 col-md-offset-2">
        <h1>@Localizer.Get("FindProForReview_PageTitle")</h1>

        <div class="steps">
            <ul class="list-inline list-unstyled">
                <li>
                    <span class="visual"><i class="glyphicon glyphicon-search"></i></span>
                    <span class="verbal"><strong>1.</strong> @Localizer.Get("FindProForReview_Step1")</span>
                    <div class="search">
                        @Html.Bootstrap().TextBox("ProName").Class("typeahead").HtmlAttributes(new Dictionary<string, string> { { "data-provide", "typeahead" }})
                    </div>
                </li>
                <li>
                    <span class="visual"><i class="glyphicon glyphicon-comment"></i></span>
                    <span class="verbal"><strong>2.</strong> @Localizer.Get("FindProForReview_Step2")</span>
                    <div class="selection">
                        <a id="reviewLink" href="#" class="hide btn btn-success">@Localizer.Get("FindProToReview_ReviewLink") <span class="name"></span></a>
                    </div>
                </li>
            </ul>
        </div>
    </div>
</div>



@section scripts {

@Scripts.Render("~/scripts/hogan-2.0.0.js")
@Scripts.Render("~/scripts/typeahead.min.js")

<script>
    $('.typeahead').typeahead({
        name: 'profile-names',
        remote: {
            url: '/profile/search?professionalsonly=true&format=json&name=%QUERY',
            filter: function (results) {
                var profiles = [];
                $.each(results, function (index, profile) {
                    if (profile.IsProfessional) {
                        profiles.push({
                            "value": profile.Id,
                            "city": profile.ProfessionalInfo.CompanyContactInfo.Location.Address.City,
                            "country": profile.ProfessionalInfo.CompanyContactInfo.Location.Address.Country,
                            "name": profile.ProfessionalInfo.CompanyName,
                            "isProxy": profile.IsProxy,
                            "tokens": [profile.ProfessionalInfo.CompanyName]
                        });
                    }
                });
                return profiles;
            },
            cache: false
        },
        valueKey: 'name',
        template: '<p>{{name}}</p><p><small>{{city}}, {{country}}</small></p>',
        limit: 50,
        engine: Hogan
    }).keyup(function (e) {
        $('#reviewLink').attr('href', '@(Url.RouteUrlForCurrentLocale("PostProfileReview", new { ProfileId = "__profileId__" }))').addClass('hide');

    }).on('typeahead:selected', function (e, item) {
        $('#reviewLink')
            .attr('href', $('#reviewLink').attr('href').replace('__profileId__', item.value))
            .removeClass('hide')
            .children('.name')
            .html(item.name);
    });
</script>

}

